<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    x:Class="Proryv.ElectroARM.Monit.DataMonit.Details.AuxiliaryResources"                    
                    xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">


    <ResourceDictionary.MergedDictionaries>
       <ResourceDictionary Source="/ElectroARM_Styles;Component/Style/RadioButtonStyle.xaml"/>
        <ResourceDictionary Source="/ElectroARM_Styles;Component/Style/ExpanderStyle.xaml"/>
        <ResourceDictionary Source="/ElectroARM_Styles;Component/Style/TextBoxStyle.xaml"/>
        <ResourceDictionary Source="/ElectroARM_Styles;Component/Style/CheckBoxStyle.xaml"/>
        <ResourceDictionary Source="/ElectroARM_Styles;Component/Style/DataGridControlStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>


    <xcdg:NullToBooleanConverter x:Key="nullToBooleanConverter" />
    <xcdg:ThicknessConverter x:Key="inverseThicknessConverter" InverseValue="True" />
    <xcdg:ThicknessConverter x:Key="thicknessConverter" />
    <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />

    <xcdg:TypeToVisibilityConverter x:Key="notDetailConfigConverter"
                                   Visibility="Visible"
                                   SetVisibilityWhenTrue="False" />
    
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="19"/>
        <Setter Property="Height" Value="13"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent" Height="13" Width="19">
                        <Border BorderBrush="Gray" BorderThickness="1" Background="#FFFFFFFF" Height="9" SnapsToDevicePixels="true" Width="9">
                            <Path x:Name="ExpandPath" Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z" Fill="Black" Margin="1,1,1,1"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Data" TargetName="ExpandPath" Value="M 0 2 L 0 3 L 5 3 L 5 2 Z"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--**************************
    * TEMPLATE: HierarchicalGroupByControlNode
    ************************** -->
    <ControlTemplate x:Key="tableflowViewAeroNormalColorHierarchicalGroupByControlNodeTemplate"
                    TargetType="xcdg:HierarchicalGroupByControlNode">

        <StackPanel Orientation="Horizontal"
                  Background="{TemplateBinding Background}"
                  Margin="0,-3,0,0">

            <Grid VerticalAlignment="Top"
               HorizontalAlignment="Center"
               Margin="0,0,0,0">


                <Border x:Name="border2"
                       BorderBrush="{StaticResource BaseLightGray}"
                       CornerRadius="0"
                       BorderThickness="1" Background="{StaticResource BaseLightGray}">



                    <TextBlock x:Name="titleTextBlock"
                                Text="{TemplateBinding Title}"
                                Foreground="Black"
                                Margin="3,2,3,4" />

                </Border>
            </Grid>

            <ItemsPresenter Margin="2,0,0,0"
                         VerticalAlignment="Bottom"
                         HorizontalAlignment="Right" />

        </StackPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="border2" Value="{StaticResource BaseLightControlBackground}"/>
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>


    <!--**************************
    * STYLE: HierarchicalGroupByControlNode
    ************************** -->
    <Style 
          TargetType="xcdg:HierarchicalGroupByControlNode">

        <Setter Property="StairHeight"
              Value="0" />

        <Setter Property="ConnectionLineOffset"
              Value="0" />

        <Setter Property="ConnectionLineAlignment"
              Value="CenterToCenter" />

        <Setter Property="Template"
              Value="{StaticResource tableflowViewAeroNormalColorHierarchicalGroupByControlNodeTemplate}" />

    </Style>





    <!-- DataTemplate for DataGridContext displayed inside the HierarchicalGroupByControl -->
    <HierarchicalDataTemplate x:Key="dataGridContextTemplate"
                             DataType="{x:Type xcdg:DataGridContext}"
                             ItemsSource="{Binding DetailConfigurations}">

        <xcdg:HierarchicalGroupByControlNode x:Name="groupByControlNode"
                                            ItemsSource="{Binding GroupLevelDescriptions}"
                                            Title="{Binding SourceDetailConfiguration.Title}" />

        <!-- Trigger to bind Title to the DataGridContext.DataGridControl.ItemsSourceName if DataGridContext.ParentDataGridContext is null -->
        <HierarchicalDataTemplate.Triggers>
            <DataTrigger Binding="{Binding SourceDetailConfiguration}"
                      Value="{x:Null}">
                <Setter TargetName="groupByControlNode"
                    Property="Title" Value="{Binding DataGridControl.ItemsSourceName}"/>
            </DataTrigger>
        </HierarchicalDataTemplate.Triggers>

    </HierarchicalDataTemplate>


    <!-- DataTemplate for DetailConfiguration displayed inside the HierarchicalGroupByControlNode -->
    <HierarchicalDataTemplate x:Key="detailConfigurationTemplate"
                             DataType="{x:Type xcdg:DetailConfiguration}"
                             ItemsSource="{Binding DetailConfigurations}">

        <xcdg:HierarchicalGroupByControlNode ItemsSource="{Binding GroupLevelDescriptions}"
                                            Title="{Binding Title}" />
    </HierarchicalDataTemplate>


    <!--**************************
    * TEMPLATE: HierarchicalGroupByControl
    ************************** -->

    <!-- TreeViewItem Style to avoid displaying Expander and avoid selection and click -->
    <Style x:Key="hierarchicalGroupByControlTreeViewItemStyle"
          TargetType="{x:Type TreeViewItem}">
        <Style.Resources>
            <xcdg:TreeViewLineConverter x:Key="LineConverter" />
        </Style.Resources>

        <Setter Property="IsExpanded"
              Value="True" />

        <Setter Property="Focusable"
              Value="False" />

        <Setter Property="Visibility">
            <Setter.Value>
                <PriorityBinding>
                    <Binding Path="."
                        Converter="{StaticResource notDetailConfigConverter}"
                        ConverterParameter="{x:Type xcdg:DetailConfiguration}" />
                    <Binding Path="Visible"
                        Converter="{StaticResource booleanToVisibilityConverter}" />
                </PriorityBinding>

            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid ShowGridLines="False">
                        <Grid.ColumnDefinitions>

                            <!--This ColumnDefinition is required for stair spacing-->
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition MaxHeight="1" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                          Padding="{TemplateBinding Padding}"
                          BorderBrush="{TemplateBinding Border.BorderBrush}"
                          Background="{TemplateBinding Panel.Background}"
                          x:Name="treeViewItemBorder"
                          SnapsToDevicePixels="True"
                          VerticalAlignment="Top"
                          Grid.Column="1"
                          Grid.RowSpan="3">


                            <!--Will contain DetailGroupByConrol-->

                            <ContentPresenter Content="{TemplateBinding HeaderedContentControl.Header}"
                                       ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                       ContentSource="Header"
                                       x:Name="PART_Header"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                       Margin="2,0,2,0" />
                        </Border>
                        <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}" Visibility="Collapsed"/>

                        <ItemsPresenter x:Name="ItemsHost"
                                  Grid.Column="1"
                                  Grid.Row="3"
                                  Grid.ColumnSpan="2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded"
                           Value="false">
                            <Setter TargetName="ItemsHost"
                             Property="Visibility"
                             Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="tableflowViewAeroNormalColorHierarchicalGroupByControlTemplate"
                    TargetType="{x:Type xcdg:HierarchicalGroupByControl}">
        <ControlTemplate.Resources>
            <ItemsPanelTemplate x:Key="ItemsPanelTemplate">
                <StackPanel Orientation="Horizontal"/>
            </ItemsPanelTemplate>
            <!--this style is set to avoid having implicit treeview style
             overide the HierarchicalGroupByControl's TreeView-->
            <Style TargetType="{x:Type TreeView}" />
        </ControlTemplate.Resources>

        <!-- This Grid is used to layout the GroupLevelIndicatorPane placeholder and the HierarchicalGroupByControl -->
        <Grid x:Name="rootGrid">
            <Grid.ColumnDefinitions>
                <!-- HierarchicalGroupLevelIndicatorPane -->
                <ColumnDefinition Width="Auto" />
                <!-- GroupLevelIndicatorPane -->
                <ColumnDefinition Width="Auto" />

                <!-- HierarchicalGroupByControl -->
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- The border responsible for the visual outline of the row (gridlines and background)
              spans the GroupLevelIndicatorPane and CellsHost Panel. Those 2 elements are not children of
              the Border because we don't want the border to be displayed in the GroupLevelIndicatorPane. -->
            <Border x:Name="rootBorder"
                 Grid.Column="1"
                 Grid.ColumnSpan="2"
                 Background="{TemplateBinding Background}"
                 BorderBrush="{Binding (xcdg:DataGridControl.DataGridContext).HorizontalGridLineBrush, RelativeSource={RelativeSource Self}}"
                    Padding="{TemplateBinding Padding}">
                <Border.BorderThickness>
                    <Binding Path="(xcdg:DataGridControl.DataGridContext).HorizontalGridLineThickness" ConverterParameter="Top"
                             Converter="{StaticResource thicknessConverter}" RelativeSource="{RelativeSource Self}" />
                </Border.BorderThickness>
            </Border>

            <Border x:Name="verticalGridLineBorder"
                 Grid.Column="1"
                 Grid.ColumnSpan="2"
                 BorderBrush="{Binding (xcdg:DataGridControl.DataGridContext).VerticalGridLineBrush, RelativeSource={RelativeSource Self}}"
                 BorderThickness="{Binding (xcdg:DataGridControl.DataGridContext).VerticalGridLineThickness, ConverterParameter=Right, Converter={StaticResource thicknessConverter}, RelativeSource={RelativeSource Self}}" />


            <xcdg:HierarchicalGroupLevelIndicatorPane Grid.Column="0" />

            <!-- GroupLevelIndicatorPane is a placeholder for individual GroupLevelIndicator elements that are added
                       whenever this Row is part of a group. -->
            <xcdg:GroupLevelIndicatorPane x:Name="groupLevelIndicatorPane"
                                        Grid.Column="1" />

            <Border BorderBrush="{TemplateBinding BorderBrush}"
                 BorderThickness="{TemplateBinding BorderThickness}"
                 Grid.Column="2">

                <Grid>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.53*" />
                            <RowDefinition Height="0.27*" />
                            <RowDefinition Height="0.2*" />
                        </Grid.RowDefinitions>

                        <Border Grid.RowSpan="3" BorderBrush="{StaticResource BaseDarkGray}" Background="{StaticResource BaseDarkGray}" BorderThickness="0">
                        </Border>


                    </Grid>

                    <StackPanel Orientation="Horizontal">

                        <TreeView x:Name="PART_HierarchicalGroupByControlTreeView"
                            ItemContainerStyle="{StaticResource hierarchicalGroupByControlTreeViewItemStyle}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Transparent"
                            Focusable="False">

                            <TreeViewItem Header="{Binding (xcdg:DataGridControl.DataGridContext), RelativeSource={RelativeSource Self}}"
                                   HeaderTemplate="{StaticResource dataGridContextTemplate}"
                                   ItemsSource="{Binding (xcdg:DataGridControl.DataGridContext).DetailConfigurations, RelativeSource={RelativeSource Self}}"
                                   ItemTemplate="{StaticResource detailConfigurationTemplate}"
                                   ItemContainerStyle="{StaticResource hierarchicalGroupByControlTreeViewItemStyle}"
                                   IsExpanded="True" ItemsPanel="{StaticResource ItemsPanelTemplate}" />

                        </TreeView>

                        <!-- This ContentPresenter displays the value of the NoGroupContent property
                 of the GroupByControl. This content must only be displayed when there are
                 no groups present, so we set its Visibility to Collapsed by default and
                 it is made visible via a trigger. -->
                        <ContentPresenter x:Name="noGroupContentPresenter"
                                    Content="{TemplateBinding NoGroupContent}"
                                    VerticalAlignment="Center"
                                    Visibility="Collapsed"
                                    Margin="5,0,0,0" />

                    </StackPanel>
                    <!-- The GroupByControl is an ItemsControl, so it must have an ItemsPresenter in its
                 Template in order to layout and show its child items. The default ItemsPanel
                 of the GroupByControl is a "StaircasePanel", which layout its items in a
                 staircase-like pattern and draws connecting lines between the items. -->
                    <ItemsPresenter Margin="{TemplateBinding Padding}" />

                </Grid>
            </Border>

        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding HasGroups, RelativeSource={RelativeSource Self}}"
                      Value="True">

                <Setter TargetName="noGroupContentPresenter"
                    Property="Visibility"
                    Value="Visible" />

            </DataTrigger>

            <DataTrigger Binding="{Binding (xcdg:GroupLevelIndicatorPane.GroupLevel), RelativeSource={RelativeSource TemplatedParent}}"
                      Value="-1">
                <Setter TargetName="groupLevelIndicatorPane"
                    Property="Visibility"
                    Value="Collapsed" />
                <Setter TargetName="verticalGridLineBorder"
                    Property="BorderThickness"
                    Value="{Binding (xcdg:DataGridControl.DataGridContext).VerticalGridLineThickness, ConverterParameter=Right\, Left, Converter={StaticResource thicknessConverter}, RelativeSource={RelativeSource Self}}" />
            </DataTrigger>


        </ControlTemplate.Triggers>

    </ControlTemplate>

    <ControlTemplate x:Key="tableflowViewCommonHierarchicalGroupByControlOldGroupByControlTemplate"
                    TargetType="{x:Type xcdg:HierarchicalGroupByControl}">

        <!-- This Grid is used to layout the GroupLevelIndicatorPane placeholder and the HierarchicalGroupByControl -->
        <Grid x:Name="rootGrid">
            <Grid.ColumnDefinitions>
                <!-- HierarchicalGroupLevelIndicatorPane -->
                <ColumnDefinition Width="Auto" />
                <!-- GroupLevelIndicatorPane -->
                <ColumnDefinition Width="Auto" />

                <!-- HierarchicalGroupByControl -->
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- The border responsible for the visual outline of the row (gridlines and background)
              spans the GroupLevelIndicatorPane and CellsHost Panel. Those 2 elements are not children of
              the Border because we don't want the border to be displayed in the GroupLevelIndicatorPane. -->
            <Border x:Name="rootBorder"
                 Grid.Column="1"
                 Grid.ColumnSpan="2"
                 Background="{TemplateBinding Background}"
                 BorderBrush="{Binding (xcdg:DataGridControl.DataGridContext).HorizontalGridLineBrush, RelativeSource={RelativeSource Self}}"
                 BorderThickness="{Binding (xcdg:DataGridControl.DataGridContext).HorizontalGridLineThickness, ConverterParameter=Top, Converter={StaticResource thicknessConverter}, RelativeSource={RelativeSource Self}}"
                 Padding="{TemplateBinding Padding}" />

            <Border x:Name="verticalGridLineBorder"
                 Grid.Column="1"
                 Grid.ColumnSpan="2"
                 BorderBrush="{Binding (xcdg:DataGridControl.DataGridContext).VerticalGridLineBrush, RelativeSource={RelativeSource Self}}"
                 BorderThickness="{Binding (xcdg:DataGridControl.DataGridContext).VerticalGridLineThickness, ConverterParameter=Right, Converter={StaticResource thicknessConverter}, RelativeSource={RelativeSource Self}}" />

            <xcdg:HierarchicalGroupLevelIndicatorPane Grid.Column="0" />

            <!-- GroupLevelIndicatorPane is a placeholder for individual GroupLevelIndicator elements that are added
                       whenever this Row is part of a group. -->
            <xcdg:GroupLevelIndicatorPane x:Name="groupLevelIndicatorPane"
                                        Grid.Column="1" />

            <xcdg:GroupByControl Grid.Column="2"
                               BorderBrush="{TemplateBinding BorderBrush}"
                               Background="{TemplateBinding Background}"
                               BorderThickness="{TemplateBinding BorderThickness}"
                               AllowGroupingModification="{TemplateBinding AllowGroupingModification}"
                               AllowSort="{TemplateBinding AllowSort}"
                               ConnectionLinePen="{TemplateBinding ConnectionLinePen}"
                               NoGroupContent="{TemplateBinding NoGroupContent}"
                               xcdg:TableView.CanScrollHorizontally="True" />

        </Grid>

        <ControlTemplate.Triggers>

            <DataTrigger Binding="{Binding (xcdg:GroupLevelIndicatorPane.GroupLevel), RelativeSource={RelativeSource TemplatedParent}}"
                      Value="-1">
                <Setter TargetName="groupLevelIndicatorPane"
                    Property="Visibility"
                    Value="Collapsed" />
                <Setter TargetName="verticalGridLineBorder"
                    Property="BorderThickness"
                    Value="{Binding (xcdg:DataGridControl.DataGridContext).VerticalGridLineThickness, ConverterParameter=Right\, Left, Converter={StaticResource thicknessConverter}, RelativeSource={RelativeSource Self}}" />
            </DataTrigger>

        </ControlTemplate.Triggers>

    </ControlTemplate>


    <Style 
		TargetType="{x:Type xcdg:HierarchicalGroupByControl}">

        <!-- The Background property must be set for DragManager to work properly -->
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Foreground" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BaseDarkGray}"/>
        <Setter Property="Background" Value="{StaticResource BaseDarkGray}"/>


        <Setter Property="NoGroupContent" Value="Перенесите сюда столбец для группировки"/>

        <Setter Property="Focusable"
			Value="False" />

        <Setter Property="StairHeight"
			Value="0" />

        <Setter Property="ConnectionLineOffset"
			Value="0" />

        <Setter Property="ConnectionLineAlignment"
			Value="CenterToCenter" />

        <!--<Setter Property="ConnectionLinePen"
              Value="{StaticResource groupByConnectionLinePen}" />-->

        <Setter Property="xcdg:RowSelector.Visible"
			Value="False" />

        <Setter Property="xcdg:TableView.CanScrollHorizontally"
			Value="False" />

        <Setter Property="Template"
			Value="{StaticResource tableflowViewAeroNormalColorHierarchicalGroupByControlTemplate}" />

        <!-- <Style.Triggers>

         <MultiDataTrigger>
            <MultiDataTrigger.Conditions>

               <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).HasDetails}"
                          Value="False" />

               <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(xcdg:DataGridControl.DataGridContext).ParentDataGridContext, Converter={StaticResource nullToBooleanConverter}}"
                          Value="True" />

            </MultiDataTrigger.Conditions>

            <Setter Property="Template"
                    Value="{StaticResource tableflowViewCommonHierarchicalGroupByControlOldGroupByControlTemplate}" />

         </MultiDataTrigger>

      </Style.Triggers>-->

    </Style>
    <Style x:Key="{x:Type xcdg:ScrollTip}" TargetType="{x:Type xcdg:ScrollTip}">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment"   Value="Center" />
        <Setter Property="Template" Value="{StaticResource BaseScrollTip}"/>
    </Style>



    <!--<Style x:Key ="ThisGridDataRow" BasedOn="{StaticResource {x:Type xcdg:DataRow}}"  TargetType="{x:Type xcdg:DataRow}">
        <Setter Property="Height" Value="Auto" />
    </Style>-->

    <Style  TargetType="{x:Type xcdg:TableflowView}" BasedOn="{StaticResource {x:Type xcdg:TableflowView}}">
        <Setter Property="ContainerHeight" Value="30" />
    </Style>

    <!--<Style TargetType="{x:Type xcdg:ColumnManagerRow}">
        <Setter Property="MinWidth"
               Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollContentPresenter}},
                               Path=ActualWidth}"/>
    </Style>-->

    <!--<Style TargetType="{x:Type xcdg:ColumnManagerCell}" BasedOn="{StaticResource {x:Type xcdg:ColumnManagerCell}}">
        <Setter Property="Height" Value="50"/>
    </Style>-->


    <Style x:Key="singleSelectionModeAutoFilterControl"
           TargetType="{x:Type xcdg:AutoFilterControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xcdg:AutoFilterControl}">
                    <Border x:Name="autoFilterControlBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <Button DockPanel.Dock="Top"
                                    Grid.Row="0"
                                    MinHeight="24"
                                    Background="{TemplateBinding Background}"
                                    Content="{TemplateBinding ClearAutoFilterText}"
                                    Command="xcdg:AutoFilterControl.ClearAutoFilterValues"
                                    Foreground="{TemplateBinding Foreground}" />

                            <!-- ItemsSource will be set in OnApplyTemplate of AutoFilterControl because the DataGridContext does not
                                  redirects automatically to the DataGridCollectionView for the Master level -->
                            <ListBox x:Name="PART_DistinctValuesHost"
                                     Grid.Row="1"
                                     MaxHeight="350"
                                     Width="200"
                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                     Background="{TemplateBinding Background}"
                                     Foreground="{TemplateBinding Foreground}"
                                     BorderThickness="0"
                                     ItemTemplate="{TemplateBinding DistinctValueItemTemplate}"
                                     ItemTemplateSelector="{TemplateBinding DistinctValueItemTemplateSelector}"
                                     ItemContainerStyle="{TemplateBinding DistinctValueItemContainerStyle}"
                                     ItemContainerStyleSelector="{TemplateBinding DistinctValueItemContainerStyleSelector}"
                                     SelectionMode="Single" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>