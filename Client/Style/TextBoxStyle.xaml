<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"                                
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"                   
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                 xmlns:ig="http://schemas.infragistics.com/xaml"
     xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives" mc:Ignorable="d">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/ElectroARM_Styles;Component/Style/SimpleScrollBar.xaml"/>
        <ResourceDictionary Source="/ElectroARM_Styles;Component/Style/BrushResource.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="WarningPanelTextBox">
        <TextBox Background="{x:Null}" BorderBrush="{x:Null}" FontSize="{StaticResource BaseFontSizeXL}"  Foreground="#F2000000" HorizontalContentAlignment="Center" TextWrapping="Wrap"  IsReadOnly="True"/>
    </DataTemplate>


  








    <ContextMenu x:Key="TextBoxContextMenu" Background="White">
        <MenuItem Command="ApplicationCommands.Copy"  Header="Копировать&#160;" />
        <MenuItem Command="ApplicationCommands.Cut"   Header="Вырезать&#160;&#160;&#160;" />
        <MenuItem Command="ApplicationCommands.Paste" Header="Вставить&#160;&#160;&#160;" />
    </ContextMenu>

    <Style BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="{StaticResource BaseNormalFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource BaseFontSizeM}"/>
        <Setter Property="Foreground" Value="{StaticResource BaseDarkFontColor}"/>
        <Setter Property="MinHeight" Value="21"/>
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}" />
        <Setter Property="BorderBrush" Value="{StaticResource BaseLightControlBorder}"/>
        <Setter Property="Background" Value="{StaticResource  BaseLightControlBackground}"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="0" BorderThickness="1,1,1,1" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                        <ScrollViewer Style="{StaticResource SimpleScrollViewer}" x:Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TextWrapping"  Value="NoWrap">
                            <Setter Property="VerticalAlignment" TargetName="PART_ContentHost" Value="Center"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="Bd" Value="0.53"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="FontFamily" Value="{StaticResource BaseNormalFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource BaseFontSizeM}"/>
        <Setter Property="Foreground" Value="{StaticResource BaseDarkFontColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BaseLightBlue}"/>
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}" />
        <Setter Property="Height" Value="21"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border Height="{TemplateBinding Height}" VerticalAlignment="Center" HorizontalAlignment="Stretch"  BorderThickness="1,1,1,1" BorderBrush="{TemplateBinding BorderBrush}" x:Name="border" SnapsToDevicePixels="True" Background="{StaticResource BaseLightControlBackground}">
                        <ScrollViewer x:Name="PART_ContentHost" VerticalContentAlignment="Center" Padding="3,0,3,0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlaceholderTextBox" TargetType="{x:Type TextBox}">
        <!--<Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>-->
        <Setter Property="BorderBrush" Value="{StaticResource BaseMoreLightBlue}"/>
        <Setter Property="FontFamily" Value="{StaticResource BaseNormalFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource BaseFontSizeM}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource BaseGrayFontColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" Margin="20,0,0,0" VerticalScrollBarVisibility="Auto" />

                            <Rectangle Fill="{StaticResource Comment_Brush}" x:Name="icon"  Height="16" Width="16" Grid.Row="4" Margin="5,3,5,2" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                            <TextBlock x:Name="plaseholder"
                                   Margin="2,0"
                                   Foreground="#FF8f939d"
                                   IsHitTestVisible="False"
                                   Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                   Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="plaseholder" Property="Visibility" Value="Visible" />
                            <Setter TargetName="icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity"  Value="0.5"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value="" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="plaseholder" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="icon" Property="Visibility" Value="Visible" />
                                <!--<Setter Property="HorizontalContentAlignment" Value="Center" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />-->
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style x:Key="PopupSelectedText" TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="{StaticResource BaseNormalFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource BaseFontSizeM}"/>
        <Setter Property="Foreground" Value="{StaticResource BaseDarkFontColor}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
	    <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}" />
        <Setter Property="IsReadOnly" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="5,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border Margin="1,1,1,1" BorderThickness="1,1,1,1" Background="{StaticResource BaseLightControlBackground}" CornerRadius="0" BorderBrush="{StaticResource BaseLightBlue}" OpacityMask="{x:Null}" Grid.ColumnSpan="3"/>
                        <ScrollViewer Style="{StaticResource SimpleScrollViewer}"  x:Name="PART_ContentHost" Margin="2" Grid.ColumnSpan="3"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TextWrapping"  Value="NoWrap">
                            <Setter Property="VerticalAlignment" TargetName="PART_ContentHost" Value="Center"/>
                        </Trigger>
                        <Trigger Property="TextWrapping"  Value="WrapWithOverflow">
                            <Setter Property="VerticalAlignment" TargetName="PART_ContentHost" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                        </Trigger>
                        <Trigger Property="TextWrapping"  Value="Wrap">
                            <Setter Property="VerticalAlignment" TargetName="PART_ContentHost" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity"  Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="{StaticResource BaseNormalFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource BaseFontSizeM}"/>
        <Setter Property="Foreground" Value="{StaticResource BaseDarkFontColor}"/>
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{x:Null}"/>
    </Style>
    
    
    <Style x:Key="FillEditorTextStyle" TargetType="{x:Type TextBox}">
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Bd" BorderBrush="{x:Null}" CornerRadius="0,0,0,0" BorderThickness="0,0,0,0" Background="{x:Null}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <ScrollViewer x:Name="PART_ContentHost" Margin="-2,0,0,0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="0"/>
                            <Setter Property="Background" TargetName="Bd" Value="{x:Null}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    
    <Style x:Key="SelectedText" TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="{StaticResource BaseNormalFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource BaseFontSizeM}"/>
        <Setter Property="Foreground" Value="{StaticResource BaseDarkFontColor}"/>
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}" />
        <Setter Property="IsReadOnly" Value="true"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Bd" BorderBrush="{x:Null}" CornerRadius="0,0,0,0" BorderThickness="0,0,0,0" Background="{x:Null}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <ScrollViewer x:Name="PART_ContentHost" Margin="-2,0,0,0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TextWrapping"  Value="NoWrap">
                            <Setter Property="VerticalAlignment" TargetName="PART_ContentHost" Value="Center"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="Bd" Value="0.53"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{StaticResource BaseNormalFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource BaseFontSizeM}"/>
        <!--<Setter Property="Foreground" Value="{StaticResource BaseDarkFontColor}"/>-->
    </Style>

    <Style x:Key="WarningTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="{StaticResource BaseFontSizeXL}"/>
        <Setter Property="Foreground" Value="{StaticResource BaseGrayFontColor}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>


    <Style x:Key="TextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{StaticResource BaseNormalFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource BaseFontSizeM}"/>
        <Setter Property="Foreground" Value="{StaticResource BaseDarkFontColor}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>


    <Style x:Key="TextBlockDecorationBlueStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource BaseDarkFontColor}"/>
        <Setter Property="FontFamily" Value="{StaticResource BaseNormalFontFamily}"/>
        <Setter Property="TextDecorations" Value="Underline"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Foreground" Value="{StaticResource IconGreen}"/>
            </Trigger>
        </Style.Triggers>
    </Style>




    <Style TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="{StaticResource BaseNormalFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource BaseFontSizeM}"/>
        <Setter Property="Foreground" Value="{StaticResource BaseDarkFontColor}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GridLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="{StaticResource BaseNormalFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource BaseFontSizeM}"/>
        <Setter Property="Foreground" Value="{StaticResource BaseDarkFontColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BaseMoreLightBlue}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1,1,1,1"/>
        <Setter Property="Background" Value="{StaticResource BaseLightGray}"/>
        <Setter Property="Padding" Value="0,1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border SnapsToDevicePixels="true" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" >
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="DashArrayLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="{StaticResource BaseNormalFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource BaseFontSizeM}"/>
        <Setter Property="Foreground" Value="{StaticResource BaseDarkFontColor}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1,1,1,1"/>
        <Setter Property="Background" Value="{StaticResource BaseLightGray}"/>
        <Setter Property="Padding" Value="0,1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Grid>
                        <Rectangle Margin="0" Fill="{DynamicResource BaseLightGray}" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                        <Border SnapsToDevicePixels="true" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

   


    <Style x:Key="BlueLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="{StaticResource BaseBoldFontFamily}"/>
        <Setter Property="Foreground" Value="{StaticResource IconBlue}"/>
        <Setter Property="FontSize" Value="{StaticResource BaseFontSizeM}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="5,0,5,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RedLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="{StaticResource BaseBoldFontFamily}"/>
        <Setter Property="Foreground" Value="{StaticResource IconRed}"/>
        <Setter Property="FontSize" Value="{StaticResource BaseFontSizeM}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="5,0,5,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VioletLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="{StaticResource BaseBoldFontFamily}"/>
        <Setter Property="Foreground" Value="#FF9c00a6"/>
        <Setter Property="FontSize" Value="{StaticResource BaseFontSizeM}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="5,0,5,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style  TargetType="{x:Type ig:XamNumericInput}">
        <Setter Property="FontFamily" Value="{StaticResource BaseNormalFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource BaseFontSizeM}"/>
        <Setter Property="Foreground" Value="{StaticResource BaseDarkFontColor}"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Style.BasedOn>
            <Style TargetType="{x:Type ig:XamMaskedInput}">
                <Setter Property="Background" Value="White"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="SpinButtonStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type RepeatButton}">
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Padding" Value="3,1"/>
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Focusable" Value="False"/>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="BorderBrush" Value="{StaticResource BaseLightBlue}">
                </Setter>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ig:XamMaskedInput}">
                            <igPrim:ValidationDecorator x:Name="MainBorder">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OverBorder">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BgBorder">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.4"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="ReadOnly"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Unfocused"/>
                                        <VisualState x:Name="Focused">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OverBorder">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="BgBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="1" CornerRadius="0" Margin="0" Visibility="Visible">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid>
                                                <igPrim:MaskedInputTextBox x:Name="PART_InputTextBox" Foreground="{TemplateBinding Foreground}" Focusable="{TemplateBinding Focusable}" FlowDirection="LeftToRight" HorizontalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" InputMethod.IsInputMethodEnabled="{TemplateBinding InputMethod.IsInputMethodEnabled}" IsTabStop="{TemplateBinding IsTabStop}" IsReadOnly="{TemplateBinding IsReadOnly}" Margin="{TemplateBinding Padding}" InputMethod.PreferredImeState="{TemplateBinding InputMethod.PreferredImeState}" VerticalAlignment="Stretch" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                                    <igPrim:MaskedInputTextBox.Style>
                                                        <Style TargetType="{x:Type TextBox}">
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                                            <Setter Property="BorderThickness" Value="0"/>
                                                        </Style>
                                                    </igPrim:MaskedInputTextBox.Style>
                                                    <igPrim:MaskedInputTextBox.TextAlignment>
                                                        <Binding Mode="OneWay" Path="HorizontalContentAlignment" RelativeSource="{RelativeSource TemplatedParent}">
                                                            <Binding.Converter>
                                                                <igPrim:HorizontalToTextAlignmentConverter/>
                                                            </Binding.Converter>
                                                        </Binding>
                                                    </igPrim:MaskedInputTextBox.TextAlignment>
                                                </igPrim:MaskedInputTextBox>
                                                <Border x:Name="OverBorder" BorderBrush="{StaticResource BaseLightBlue}" BorderThickness="1" Grid.ColumnSpan="2" CornerRadius="0" Opacity="0"/>
                                            </Grid>
                                            <Grid x:Name="PART_SpinButtons" Grid.Column="1" Margin="1" Visibility="{TemplateBinding SpinButtonVisibilityResolved}">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="1"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>
                                                <RepeatButton x:Name="spinUp" Style="{TemplateBinding SpinButtonStyle}">
                                                    <RepeatButton.ContentTemplate>
                                                        <DataTemplate>
                                                            <Path Data="M0,3C0,3 0,4 0,4 0,4 3,4 3,4 3,4 3,3 3,3 3,3 4,3 4,3 4,3 4,4 4,4 4,4 7,4 7,4 7,4 7,3 7,3 7,3 6,3 6,3 6,3 6,2 6,2 6,2 5,2 5,2 5,2 5,1 5,1 5,1 4,1 4,1 4,1 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3z" Fill="Black" Height="4" Width="7"/>
                                                        </DataTemplate>
                                                    </RepeatButton.ContentTemplate>
                                                    <ig:Commanding.Command>
                                                        <igPrim:MaskedInputCommandSource AllowEventHandling="True" CommandId="SpinUp" EventName="Click" Handled="False" ParameterBinding="{x:Null}" ParameterBindingDataContext="SourceElementDataContext" Target="{x:Null}" TargetName="{x:Null}"/>
                                                    </ig:Commanding.Command>
                                                </RepeatButton>
                                                <RepeatButton x:Name="spinDown" Grid.Row="2" Style="{TemplateBinding SpinButtonStyle}">
                                                    <RepeatButton.ContentTemplate>
                                                        <DataTemplate>
                                                            <Path Data="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z" Fill="Black" Height="4" Width="7"/>
                                                        </DataTemplate>
                                                    </RepeatButton.ContentTemplate>
                                                    <ig:Commanding.Command>
                                                        <igPrim:MaskedInputCommandSource AllowEventHandling="True" CommandId="SpinDown" EventName="Click" Handled="False" ParameterBinding="{x:Null}" ParameterBindingDataContext="SourceElementDataContext" Target="{x:Null}" TargetName="{x:Null}"/>
                                                    </ig:Commanding.Command>
                                                </RepeatButton>
                                            </Grid>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </igPrim:ValidationDecorator>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.BasedOn>
    </Style>














</ResourceDictionary>