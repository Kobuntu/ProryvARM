<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"                   
    mc:Ignorable="d">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/ElectroARM_Styles;Component/Style/SimpleScrollBar.xaml"/>
        <ResourceDictionary Source="/ElectroARM_Styles;Component/Style/DrawingBrushResource.xaml"/>
		<ResourceDictionary Source="/ElectroARM_Styles;Component/Style/BrushResource.xaml"/>
        <ResourceDictionary Source="/ElectroARM_Styles;Component/Style/BaseButtonStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="treeArrowDown">
		 <Path x:Name="path2" Fill="Black" Stretch="Fill" StrokeEndLineCap="Round" StrokeLineJoin="Round" StrokeThickness="0.2" HorizontalAlignment="Center" Margin="0,0,5,0" VerticalAlignment="Center" Width="6" Data="M279.93574,-467.17671 L286.36118,-467.17671 286.36118,-473.2005 283.78267,-470.78317 C284.2983,-469.58409 283.70144,-469.12352 282.4752,-469.55743 z" Height="6" RenderTransformOrigin="0.5,0.5" Stroke="White">
                        	<Path.RenderTransform>
                        		<TransformGroup>
                        			<RotateTransform Angle="45"/>
                        		</TransformGroup>
                        	</Path.RenderTransform>
          </Path>
        <!--<Path Data="M-0.14648438,6.6453123 L14.847656,6.6453123 L7.3535156,14.608203 z" Fill="Black" HorizontalAlignment="Left" Height="3.225" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Center" Width="7.225" Margin="0,3,5,0"/>-->
    </ControlTemplate>


    <Style  TargetType="{x:Type TreeViewItem}" x:Key="TreeViewItemNonMouseOverStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="22" Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander" Style="{StaticResource SimpleTreeViewItemToggleButton}" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="0,0,0,0" Padding="{TemplateBinding Padding}"/>
                        <Border Grid.Column="1"  x:Name="Selection_Border"  BorderThickness="1,1,1,1" CornerRadius="0" BorderBrush="{x:Null}" HorizontalAlignment="Stretch" Background="{x:Null}">
                            <ContentPresenter  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" x:Name="PART_Header" Height="Auto" ContentSource="Header"/>
                        </Border>
                        <ItemsPresenter Grid.Column="1" Grid.ColumnSpan="1" Grid.Row="1" x:Name="ItemsHost" Margin="-4,0,0,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ItemsHost"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" Value="Hidden" TargetName="Expander"/>
                        </Trigger>
                        <Trigger  Property="IsSelected" Value="true">
                            <Setter TargetName="Selection_Border" Property="BorderBrush" Value="{StaticResource BaseDarkGray}"/>
                            <Setter Property="Background" TargetName="Selection_Border" Value="{StaticResource BaseDarkGray}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Selection_Border" Property="BorderBrush" Value="{StaticResource BaseDarkGray}"/>
                            <Setter Property="Background" TargetName="Selection_Border" Value="{StaticResource BaseDarkGray}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style  TargetType="{x:Type TreeViewItem}" x:Key="TreeViewItemDailyOperationStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="22" Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander" Style="{StaticResource SimpleTreeViewItemToggleButton}" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="0,0,0,0" Padding="0"/>
                        <Border Grid.Column="1"  x:Name="Selection_Border"  BorderThickness="1,1,1,1" CornerRadius="0" BorderBrush="{x:Null}" HorizontalAlignment="Stretch" Background="{x:Null}">
                            <ContentPresenter  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" x:Name="PART_Header" Height="Auto" ContentSource="Header"/>
                        </Border>
                        <ItemsPresenter Grid.Column="1" Grid.ColumnSpan="1" Grid.Row="1" x:Name="ItemsHost" Margin="-4,0,0,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ItemsHost"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" Value="Hidden" TargetName="Expander"/>
                        </Trigger>
                        <!--<Trigger  Property="IsMouseOver" Value="true">
                            <Setter TargetName="Selection_Border" Property="BorderBrush" Value="{StaticResource BaseLightGray}"/>
                            <Setter Property="Background" TargetName="Selection_Border" Value="{StaticResource BaseLightGray}"/>
                        </Trigger>-->
                        <Trigger  Property="IsSelected" Value="true">
                            <Setter TargetName="Selection_Border" Property="BorderBrush" Value="{StaticResource BaseDarkGray}"/>
                            <Setter Property="Background" TargetName="Selection_Border" Value="{StaticResource BaseDarkGray}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Selection_Border" Property="BorderBrush" Value="{StaticResource BaseDarkGray}"/>
                            <Setter Property="Background" TargetName="Selection_Border" Value="{StaticResource BaseDarkGray}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style  TargetType="{x:Type TreeView}">
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource TreeViewItemNonMouseOverStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border BorderBrush="{x:Null}" BorderThickness="0,0,0,0" CornerRadius="0,0,0,0" Background="{x:Null}" Grid.RowSpan="2" Grid.Row="1" Margin="0,0,0,0">
                            <ScrollViewer x:Name="scroller" Focusable="false" Padding="{TemplateBinding Padding}" CanContentScroll="false" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" Margin="0,0,0,0">
                                <ItemsPresenter Margin="5,0,0,0"/>
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>










<!--стиль плюс-минус используется только в фактической мощности-->


    <Style x:Key="TreeViewToggleButtonItemPlusMinus" TargetType="{x:Type ToggleButton}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="ClipToBounds" Value="False"/>
        <Setter Property="Margin" Value="5,0,3,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="Transparent">
                        <Grid x:Name="grdExpansionIndicatorClosed" Height="11" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="True" Width="11">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Border x:Name="outerBorder" CornerRadius="0" RenderTransformOrigin="0.5,0.5" Background="{StaticResource BaseDarkBlue}"/>
                            <Border x:Name="innerFill" CornerRadius="0" Height="Auto" Margin="1" Background="{StaticResource BaseLightGray}" RenderTransformOrigin="0.5,0.5" Width="Auto"/>
                            <Rectangle x:Name="plusHorizontal" Fill="{StaticResource BaseMoreDarkBlue}" HorizontalAlignment="Stretch" Height="1" Margin="2,4" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Stretch" Width="Auto"/>
                            <Rectangle x:Name="plusVert" Fill="{StaticResource BaseMoreDarkBlue}" Height="Auto" Margin="4,2" RenderTransformOrigin="0.5,0.5" Width="1"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="innerFill" Property="Background" Value="{StaticResource BaseDarkGray}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="plusVert" Value="Collapsed"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style  TargetType="{x:Type TreeViewItem}" x:Key="TreeViewItemPlusMinus">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="22" Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander" Style="{StaticResource TreeViewToggleButtonItemPlusMinus}" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="0,0,0,0" Padding="0"/>
                        <Border Grid.Column="1"  x:Name="Selection_Border"  BorderThickness="1,1,1,1" CornerRadius="0" BorderBrush="{x:Null}" HorizontalAlignment="Stretch" Background="{x:Null}">
                            <ContentPresenter  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" x:Name="PART_Header" Height="Auto" ContentSource="Header"/>
                        </Border>
                        <ItemsPresenter Grid.Column="1" Grid.ColumnSpan="1" Grid.Row="1" x:Name="ItemsHost" Margin="-4,0,0,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ItemsHost"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" Value="Hidden" TargetName="Expander"/>
                        </Trigger>
                        <!--<Trigger  Property="IsSelected" Value="true">
                            <Setter TargetName="Selection_Border" Property="BorderBrush" Value="{StaticResource BaseDarkGray}"/>
                            <Setter Property="Background" TargetName="Selection_Border" Value="{StaticResource BaseDarkGray}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Selection_Border" Property="BorderBrush" Value="{StaticResource BaseDarkGray}"/>
                            <Setter Property="Background" TargetName="Selection_Border" Value="{StaticResource BaseDarkGray}"/>
                        </MultiTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--End стиль плюс-минус используется только в фактической мощности-->

















</ResourceDictionary>
