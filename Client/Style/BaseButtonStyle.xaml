<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"   
    mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/ElectroARM_Styles;Component/Style/BrushResource.xaml"/>
        <ResourceDictionary Source="/ElectroARM_Styles;Component/Style/DrawingBrushResource.xaml"/>
        <ResourceDictionary Source="/ElectroARM_Styles;Component/Style/NewDrawingBrushResource.xaml"/>
        <ResourceDictionary Source="/ElectroARM_Styles;Component/Style/BaseToolTipStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle SnapsToDevicePixels="true" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="4"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- C ПЛОСКИМИ СТИЛЯМИ -->
    <Style x:Key="BaseButtonStyle" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="{StaticResource BaseFontSizeM}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid  Opacity="1" SnapsToDevicePixels="True" UseLayoutRounding="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="25"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="border" Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" SnapsToDevicePixels="true"/>
                        <ContentPresenter  x:Name="contentPresenter" TextElement.Foreground="{StaticResource Button.Static.Foreground}"   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,4,0"/>
                        <Rectangle Fill="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" Stroke="{x:Null}"   Margin="{Binding Path=Padding, RelativeSource={RelativeSource TemplatedParent}}"  VerticalAlignment="Stretch" UseLayoutRounding="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style x:Key="SecondButtonStyle" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="{StaticResource BaseNormalFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource BaseFontSizeL}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid  Opacity="1" SnapsToDevicePixels="True" UseLayoutRounding="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="25"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock x:Name="textBlock" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Foreground="{StaticResource SelectionFontColor}" TextDecorations="Underline"  Text="{TemplateBinding Content}"  Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,0,2"/>
                        <Rectangle Fill="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" Height="16" Width="16"  Margin="{Binding Path=Padding, RelativeSource={RelativeSource TemplatedParent}}"  VerticalAlignment="Center" UseLayoutRounding="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Foreground" TargetName="textBlock" Value="{StaticResource SelectionFontColor}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" TargetName="textBlock" Value="{StaticResource BaseDarkFontColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" TargetName="textBlock" Value="{StaticResource SelectionFontColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SecondButtonXSStyle" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="{StaticResource BaseNormalFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource BaseFontSizeL}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid  Opacity="1" SnapsToDevicePixels="True" UseLayoutRounding="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock x:Name="textBlock" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Foreground="{StaticResource SelectionFontColor}" TextDecorations="Underline"  Text="{TemplateBinding Content}"  Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,0,2"/>
                        <Rectangle Fill="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" Height="14" Width="14"  Margin="{Binding Path=Padding, RelativeSource={RelativeSource TemplatedParent}}"  VerticalAlignment="Center" UseLayoutRounding="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Foreground" TargetName="textBlock" Value="{StaticResource SelectionFontColor}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" TargetName="textBlock" Value="{StaticResource BaseDarkFontColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" TargetName="textBlock" Value="{StaticResource SelectionFontColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="BaseButtonXSStyle" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="{StaticResource BaseFontSizeM}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid  Opacity="1" SnapsToDevicePixels="True" Height="{TemplateBinding Height}" UseLayoutRounding="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="border" Grid.ColumnSpan="2"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" SnapsToDevicePixels="true"/>
                        <ContentPresenter  x:Name="contentPresenter" TextElement.Foreground="{StaticResource Button.Static.Foreground}"   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,4,0"/>
                        <Rectangle Fill="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" Stroke="{x:Null}" Height="12" Width="12" Margin="{Binding Path=Padding, RelativeSource={RelativeSource TemplatedParent}}"  VerticalAlignment="Stretch" UseLayoutRounding="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>













    <Style x:Key="BaseLightButtonStyle" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="6,0,0,0"/>
        <Setter Property="FontSize" Value="{StaticResource BaseFontSizeM}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource BaseLightGray}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BaseDarkGray}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid  Opacity="1" SnapsToDevicePixels="True" UseLayoutRounding="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="25"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="border" Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" SnapsToDevicePixels="true"/>
                        <ContentPresenter  x:Name="contentPresenter" TextElement.Foreground="{StaticResource BaseDarkFontColor}"   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,4,0"/>
                        <Rectangle Fill="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" Stroke="{x:Null}" Height="18px" Width="18px"  Margin="{Binding Path=Padding, RelativeSource={RelativeSource TemplatedParent}}"  VerticalAlignment="Stretch"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource BaseDarkGray}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BaseLightBlue}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BaseButtonFontStyle" TargetType="{x:Type ContentPresenter}">
        <Setter Property="TextBlock.FontFamily" Value="{StaticResource BaseNormalFontFamily}"/>
        <Setter Property="TextBlock.Foreground" Value="{StaticResource BaseLightFontColor}" />
        <Setter Property="TextBlock.FontSize" Value="{StaticResource BaseFontSizeM}"/>
    </Style>

    <Style x:Key="BalanceButton" TargetType="{x:Type Button}">
        <!--<Setter Property="Margin" Value="3,0,3,2"/>-->
        <Setter Property="Foreground" Value="{StaticResource BaseLightFontColor}"/>
        <Setter Property="FontFamily" Value="{StaticResource BaseNormalFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource BaseFontSizeM}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" Style="{StaticResource BaseButtonFontStyle}"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Static.Border}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4"/>
                            <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource BalanceButton}">
    <Style.Resources>
        <Style x:Key="{x:Type ToolTip}" BasedOn="{StaticResource tooltipStyle}"  TargetType="{x:Type ToolTip}" />
    </Style.Resources>
    </Style>

    <!--Только в popup-->
    <Style  x:Key="BasePopupLightButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseLightButtonStyle}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="FontSize" Value="{StaticResource BaseFontSizeM}"/>
    </Style>
    
    <Style  x:Key="BasePopupButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="FontSize" Value="{StaticResource BaseFontSizeM}"/>
    </Style>
    <Style  x:Key="BasePopupButtonStyleNoneIcon" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="FontSize" Value="{StaticResource BaseFontSizeM}"/>
    </Style>
    <!--Tnd Только в popup-->



    <Style x:Key="BaseActionButton" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="{StaticResource BaseDarkBlue}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid VerticalAlignment="Stretch" Background="{x:Null}"  HorizontalAlignment="Stretch" x:Name="grid" SnapsToDevicePixels="True">
                        <Border x:Name="border" Background="{DynamicResource BaseLightGray}"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" >
                        </Border>
                        <Rectangle Fill="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"  Stroke="{x:Null}"  Width="20" Height="20"  SnapsToDevicePixels="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource BaseDarkGray}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="IsDefaulted" Value="true"/>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BaseDarkBlue}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BaseActionButtonSm" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="18" />
        <Setter Property="Width" Value="18" />
        <Setter Property="BorderBrush" Value="{StaticResource BaseLightBlue}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid VerticalAlignment="Stretch" Background="{x:Null}"  Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" HorizontalAlignment="Stretch" x:Name="grid" SnapsToDevicePixels="True">
                        <Border x:Name="border" Background="{DynamicResource BaseLightGray}"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" >
                        </Border>
                        <Rectangle Fill="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"  Stroke="{x:Null}"  Width="16" Height="16"  SnapsToDevicePixels="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource BaseDarkGray}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="IsDefaulted" Value="true"/>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BaseDarkBlue}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="BaseActionDarkButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid VerticalAlignment="Stretch" Background="{x:Null}" HorizontalAlignment="Stretch" x:Name="grid" SnapsToDevicePixels="True">
                        <Border x:Name="border" Background="{StaticResource Button.Static.Background}" BorderBrush="Transparent" BorderThickness="1" >
                        </Border>
                        <Rectangle Fill="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"  Stroke="{x:Null}"  Width="20" Height="20"  SnapsToDevicePixels="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="IsDefaulted" Value="true"/>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BaseActionDarkToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid VerticalAlignment="Stretch" Background="{x:Null}" HorizontalAlignment="Stretch" x:Name="grid" SnapsToDevicePixels="True">
                        <Border x:Name="border" Background="{StaticResource Button.Static.Background}" BorderBrush="Transparent" BorderThickness="1" >
                        </Border>
                        <Rectangle Fill="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"  Stroke="{x:Null}"  Width="20" Height="20"  SnapsToDevicePixels="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="tarifButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid VerticalAlignment="Stretch" Background="{x:Null}" HorizontalAlignment="Stretch" x:Name="grid" SnapsToDevicePixels="True">
                        <Border x:Name="border" Background="{StaticResource Button.Static.Background}" BorderBrush="Transparent" BorderThickness="1" />
                        <Border x:Name="Innerborder" Background="Transparent" BorderBrush="Transparent" Margin="1" BorderThickness="1" />

                        <Rectangle Fill="{StaticResource SelectTarifActionBrush}"  Stroke="{x:Null}"  Width="20" Height="20"  SnapsToDevicePixels="True"/>
                    </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true"/>
                            <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Innerborder" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Innerborder" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style x:Key="ToggleButtonWithContentStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Padding" Value="2,0"/>
        <Setter Property="Foreground" Value="{StaticResource BaseDarkFontColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BaseLightBlue}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border  Background="{x:Null}" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" x:Name="border2">
                        <DockPanel Background="{x:Null}" SnapsToDevicePixels="True" LastChildFill="True">
                            <Border x:Name="border" DockPanel.Dock="Right" Width="21" Background="{StaticResource Button.Static.Background}" BorderBrush="Transparent">
                                <Path Stretch="Fill" Fill="{StaticResource BaseLightControlBackground}" Data="F1 M 10.125,12.7917L 12.7917,12.7917L 12.7917,14.125L 14.125,14.125L 14.125,15.4583L 15.4583,15.4583L 15.4583,16.7917L 16.7917,16.7917L 16.7917,15.4583L 18.125,15.4583L 18.125,14.125L 19.4583,14.125L 19.4583,12.7917L 22.125,12.7917L 22.125,14.125L 20.7917,14.125L 20.7917,15.4583L 19.4583,15.4583L 19.4583,16.7917L 18.125,16.7917L 18.125,18.125L 16.7917,18.125L 16.7917,19.4583L 15.4583,19.4583L 15.4583,18.125L 14.125,18.125L 14.125,16.7917L 12.7917,16.7917L 12.7917,15.4583L 11.4583,15.4583L 11.4583,14.125L 10.125,14.125L 10.125,12.7917 Z "  Height="5" Width="9"/>
                            </Border>
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" VerticalAlignment="Center" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                           DockPanel.Dock="Left"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>-->
                            <Setter Property="BorderBrush" TargetName="border2" Value="{StaticResource BaseDarkBlue}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" TargetName="border2" Value="{StaticResource BaseLightBlue}"/>
                            <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>-->
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>-->
                            <Setter Property="BorderBrush" TargetName="border2" Value="{StaticResource BaseLightBlue}"/>
                            <Setter Property="Background" TargetName="border2" Value="{StaticResource BaseContextSelectionBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


  

    
    
    
    
    
<!-- Кнопки на раскрытие Popup -->

    <Style x:Key="ObjectSelectorButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid VerticalAlignment="Stretch" Background="{x:Null}" HorizontalAlignment="Stretch" x:Name="grid" SnapsToDevicePixels="True">
                        <Border x:Name="border" Background="{StaticResource Button.Static.Background}" BorderBrush="Transparent" BorderThickness="1" />
                        <Border x:Name="border1" Margin="1" Background="Transparent" BorderBrush="{StaticResource Button.Pressed.Border}" BorderThickness="1" Visibility="Collapsed" />
                        <Path Stretch="Fill" Fill="{StaticResource BaseLightControlBackground}" Data="F1 M 10.125,12.7917L 12.7917,12.7917L 12.7917,14.125L 14.125,14.125L 14.125,15.4583L 15.4583,15.4583L 15.4583,16.7917L 16.7917,16.7917L 16.7917,15.4583L 18.125,15.4583L 18.125,14.125L 19.4583,14.125L 19.4583,12.7917L 22.125,12.7917L 22.125,14.125L 20.7917,14.125L 20.7917,15.4583L 19.4583,15.4583L 19.4583,16.7917L 18.125,16.7917L 18.125,18.125L 16.7917,18.125L 16.7917,19.4583L 15.4583,19.4583L 15.4583,18.125L 14.125,18.125L 14.125,16.7917L 12.7917,16.7917L 12.7917,15.4583L 11.4583,15.4583L 11.4583,14.125L 10.125,14.125L 10.125,12.7917 Z "  Height="5" Width="9"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="Visibility" TargetName="border1" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="Visibility" TargetName="border1" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ObjectSelectorDarkButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid VerticalAlignment="Stretch" Background="Transparent" HorizontalAlignment="Stretch" x:Name="grid" SnapsToDevicePixels="True">
                        <Path x:Name="path" Data="M15.288138,1.2148046 L20.210014,1.2148046 17.749077,3.9540625 z" Fill="{StaticResource BaseDarkBlue}" HorizontalAlignment="Center" Height="4" Margin="0" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Center" Width="8" Grid.Column="1" UseLayoutRounding="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="path" Value="{StaticResource BaseDarkFontColor}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="path" Value="{StaticResource BaseDarkFontColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Fill" TargetName="path" Value="{StaticResource BaseDarkFontColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="ShowPopupButtonStyle" TargetType="{x:Type Button}">
        <Style.Resources>
            <DrawingBrush x:Key="RightArrow">
                <DrawingBrush.Drawing>
                    <DrawingGroup>
                        <DrawingGroup.Children>
                            <GeometryDrawing Brush="Transparent" Geometry="F1 M 24,24L 0,24L 0,0L 24,0L 24,24 Z "/>
                            <GeometryDrawing Brush="{StaticResource BaseDarkBlue}" Geometry="F1 M 8,5.33333L 10.6667,5.33333L 10.6667,6.66667L 12,6.66667L 12,8L 13.3333,8L 13.3333,9.33333L 14.6667,9.33333L 14.6667,10.6667L 16,10.6667L 16,12L 14.6667,12L 14.6667,13.3333L 13.3333,13.3333L 13.3333,14.6667L 12,14.6667L 12,16L 10.6667,16L 10.6667,17.3333L 8,17.3333L 8,16L 9.33333,16L 9.33333,14.6667L 10.6667,14.6667L 10.6667,13.3333L 12,13.3333L 12,12L 13.3333,12L 13.3333,10.6667L 12,10.6667L 12,9.33333L 10.6667,9.33333L 10.6667,8L 9.33333,8L 9.33333,6.66667L 8,6.66667L 8,5.33333 Z "/>
                        </DrawingGroup.Children>
                    </DrawingGroup>
                </DrawingBrush.Drawing>
            </DrawingBrush>
        </Style.Resources>
        <Setter Property="Width" Value="18"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Background" Value="{StaticResource BaseLightGray}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BaseDarkBlue}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid VerticalAlignment="Stretch" Background="{x:Null}" HorizontalAlignment="Stretch" x:Name="grid" SnapsToDevicePixels="True">
                        <Border x:Name="border" Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" Background="{TemplateBinding Background}" SnapsToDevicePixels="true"/>
                        <Rectangle Fill="{StaticResource RightArrow}"  Stroke="{x:Null}"  Width="18" Height="18"  SnapsToDevicePixels="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource BaseDarkGray}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BaseDarkBlue}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource BaseDarkGray}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BaseDarkBlue}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4"/>
                          </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ObjectSelectorButtonStyleRight" BasedOn="{StaticResource ShowPopupButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="ToolTip" Value="Выбрать объект"/>
    </Style>

<!-- EndКнопки на раскрытие Popup -->












   

    <!--UANodeBrush -->
    <DrawingBrush x:Key="UANodeSummaryBrush">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="Transparent" Geometry="F1 M 38.6667,24L 0,24L 0,0L 38.6667,0L 38.6667,24 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconGreen}" Geometry="F1 M 22.6667,16L 24,16L 24,18.6667L 13.3333,18.6667L 13.3333,16L 14.6667,16L 14.6667,14.6667L 16,14.6667L 16,13.3333L 17.3333,13.3333L 17.3333,10.6667L 16,10.6667L 16,9.33333L 14.6667,9.33333L 14.6667,8L 13.3333,8L 13.3333,5.33333L 24,5.33333L 24,8L 22.6667,8L 22.6667,6.66667L 17.3333,6.66667L 17.3333,8L 18.6667,8L 18.6667,9.33333L 20,9.33333L 20,10.6667L 21.3333,10.6667L 21.3333,12L 20,12L 20,13.3333L 18.6667,13.3333L 18.6667,14.6667L 17.3333,14.6667L 17.3333,16L 16,16L 16,17.3333L 22.6667,17.3333L 22.6667,16 Z "/>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="UANodeFirstValueBrush">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="Transparent" Geometry="F1 M 38.6667,24L 0,24L 0,0L 38.6667,0L 38.6667,24 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconOrange}" Geometry="F1 M 16,5.33333L 13.3333,5.33333L 13.3333,6.66667L 10.6667,6.66667L 10.6667,8L 13.3333,8L 13.3333,16L 10.6667,16L 10.6667,17.3333L 18.6667,17.3333L 18.6667,16L 16,16L 16,5.33333 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconOrange}" Geometry="F1 M 20,14.6667L 20,17.3333L 21.3333,17.3333L 21.3333,18.6667L 20,18.6667L 20,20L 21.3333,20L 22.6667,20L 22.6667,14.6667L 20,14.6667 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconGray}" Geometry="F1 M 24,17.3333L 26.6667,17.3333L 26.6667,14.6667L 24,14.6667L 24,17.3333 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconGray}" Geometry="F1 M 28,14.6667L 28,17.3333L 30.6667,17.3333L 30.6667,14.6667L 28,14.6667 Z "/>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="UANodeLastValueBrush">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="Transparent" Geometry="F1 M 38.6667,24L 0,24L 0,0L 38.6667,0L 38.6667,24 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconGray}" Geometry="F1 M 9.33333,17.3333L 12,17.3333L 12,14.6667L 9.33333,14.6667L 9.33333,17.3333 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconGray}" Geometry="F1 M 13.3333,14.6667L 13.3333,17.3333L 16,17.3333L 16,14.6667L 13.3333,14.6667 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconBlue}" Geometry="F1 M 17.3333,17.3333L 18.6667,17.3333L 18.6667,20L 20,20L 20,14.6667L 17.3333,14.6667L 17.3333,17.3333 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconBlue}" Geometry="F1 M 17.3333,21.3333L 18.6667,21.3333L 18.6667,20L 17.3333,20L 17.3333,21.3333 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconBlue}" Geometry="F1 M 30.6667,16L 30.6667,8L 29.3333,8L 29.3333,6.66667L 26.6667,6.66667L 26.6667,8L 28,8L 28,17.3333L 32,17.3333L 32,16L 30.6667,16 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconBlue}" Geometry="F1 M 25.3333,6.66667L 21.3333,6.66667L 21.3333,8L 22.6667,8L 22.6667,16L 21.3333,16L 21.3333,17.3333L 26.6667,17.3333L 26.6667,16L 25.3333,16L 25.3333,9.33333L 26.6667,9.33333L 26.6667,8L 25.3333,8L 25.3333,6.66667 Z "/>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="UANodeMaxValueBrush">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="Transparent" Geometry="F1 M 38.6667,24L 0,24L 0,0L 38.6667,0L 38.6667,24 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconRed}" Geometry="F1 M 16,8L 4,8L 4,9.33333L 5.33333,9.33333L 5.33333,16L 4,16L 4,17.3333L 8,17.3333L 8,9.33333L 9.33333,9.33333L 9.33333,17.3333L 12,17.3333L 12,9.33333L 13.3333,9.33333L 13.3333,17.3333L 17.3333,17.3333L 17.3333,16L 16,16L 16,8 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconRed}" Geometry="F1 M 25.3333,8L 20,8L 20,9.33333L 22.6667,9.33333L 22.6667,12L 20,12L 20,13.3333L 18.6667,13.3333L 18.6667,17.3333L 26.6667,17.3333L 26.6667,16L 25.3333,16L 25.3333,8 Z M 22.6667,16L 21.3333,16L 21.3333,13.3333L 22.6667,13.3333L 22.6667,16 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconRed}" Geometry="F1 M 34.6667,16L 34.6667,13.3333L 33.3333,13.3333L 33.3333,10.6667L 32,10.6667L 32,8L 28,8L 28,9.33333L 29.3333,9.33333L 29.3333,12L 30.6667,12L 30.6667,14.6667L 32,14.6667L 32,17.3333L 36,17.3333L 36,16L 34.6667,16 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconRed}" Geometry="F1 M 29.3333,16L 28,16L 28,17.3333L 30.6667,17.3333L 30.6667,14.6667L 29.3333,14.6667L 29.3333,16 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconRed}" Geometry="F1 M 34.6667,9.33333L 36,9.33333L 36,8L 33.3333,8L 33.3333,10.6667L 34.6667,10.6667L 34.6667,9.33333 Z "/>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="UANodeMinValueBrush">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="Transparent" Geometry="F1 M 38.6667,24L 0,24L 0,0L 38.6667,0L 38.6667,24 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconGreen}" Geometry="F1 M 16,8L 4,8L 4,9.33333L 5.33333,9.33333L 5.33333,16L 4,16L 4,17.3333L 8,17.3333L 8,9.33333L 9.33333,9.33333L 9.33333,17.3333L 12,17.3333L 12,9.33333L 13.3333,9.33333L 13.3333,17.3333L 17.3333,17.3333L 17.3333,16L 16,16L 16,8 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconGreen}" Geometry="F1 M 22.6667,8L 18.6667,8L 18.6667,9.33333L 20,9.33333L 20,16L 18.6667,16L 18.6667,17.3333L 24,17.3333L 24,16L 22.6667,16L 22.6667,8 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconGreen}" Geometry="F1 M 22.6667,4L 20,4L 20,6.66667L 22.6667,6.66667L 22.6667,4 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconGreen}" Geometry="F1 M 33.3333,16L 33.3333,8L 25.3333,8L 25.3333,9.33333L 26.6667,9.33333L 26.6667,16L 25.3333,16L 25.3333,17.3333L 29.3333,17.3333L 29.3333,9.33333L 30.6667,9.33333L 30.6667,17.3333L 34.6667,17.3333L 34.6667,16L 33.3333,16 Z "/>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="UANodeDifferenceValueBrush">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="Transparent" Geometry="F1 M 38.6667,24L 0,24L 0,0L 38.6667,0L 38.6667,24 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconOrange}" Geometry="F1 M 29.3333,5.33333L 26.6667,5.33333L 26.6667,6.66667L 24,6.66667L 24,8L 26.6667,8L 26.6667,16L 24,16L 24,17.3333L 32,17.3333L 32,16L 29.3333,16L 29.3333,5.33333 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconBlue}" Geometry="F1 M 17.3333,16L 17.3333,8L 16,8L 16,6.66667L 13.3333,6.66667L 13.3333,8L 14.6667,8L 14.6667,17.3333L 18.6667,17.3333L 18.6667,16L 17.3333,16 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconBlue}" Geometry="F1 M 12,6.66667L 8,6.66667L 8,8L 9.33333,8L 9.33333,16L 8,16L 8,17.3333L 13.3333,17.3333L 13.3333,16L 12,16L 12,9.33333L 13.3333,9.33333L 13.3333,8L 12,8L 12,6.66667 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconGray}" Geometry="F1 M 24,13.3333L 18.6667,13.3333L 18.6667,12L 24,12L 24,13.3333 Z "/>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="UANodeMiddleValueBrush">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="Transparent" Geometry="F1 M 38.6667,24L 0,24L 0,0L 38.6667,0L 38.6667,24 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconOrange}" Geometry="F1 M 26.6667,6.66667L 13.3333,6.66667L 13.3333,5.33333L 26.6667,5.33333L 26.6667,6.66667 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconGray}" Geometry="F1 M 20,9.33333L 18.6667,9.33333L 18.6667,8L 14.6667,8L 14.6667,9.33333L 16,9.33333L 16,10.6667L 17.3333,10.6667L 17.3333,14.6667L 18.6667,14.6667L 18.6667,17.3333L 20,17.3333L 20,18.6667L 24,18.6667L 24,17.3333L 22.6667,17.3333L 22.6667,14.6667L 21.3333,14.6667L 21.3333,12L 20,12L 20,9.33333 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconGray}" Geometry="F1 M 16,16L 14.6667,16L 14.6667,17.3333L 13.3333,17.3333L 13.3333,18.6667L 17.3333,18.6667L 17.3333,14.6667L 16,14.6667L 16,16 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconGray}" Geometry="F1 M 21.3333,8L 21.3333,12L 22.6667,12L 22.6667,10.6667L 24,10.6667L 24,9.33333L 25.3333,9.33333L 25.3333,8L 21.3333,8 Z "/>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="UANodeIntegralValueBrush">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="Transparent" Geometry="F1 M 38.6667,24L 0,24L 0,0L 38.6667,0L 38.6667,24 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconRed}" Geometry="F1 M 14.6667,6.66667L 16,6.66667L 16,4L 17.3333,4L 17.3333,2.66667L 20,2.66667L 20,4L 18.6667,4L 18.6667,5.33333L 17.3333,5.33333L 17.3333,16L 16,16L 16,18.6667L 14.6667,18.6667L 14.6667,20L 12,20L 12,18.6667L 13.3333,18.6667L 13.3333,17.3333L 14.6667,17.3333L 14.6667,6.66667 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconGray}" Geometry="F1 M 26.6667,10.6667L 25.3333,10.6667L 25.3333,9.33333L 22.6667,9.33333L 22.6667,10.6667L 24,10.6667L 24,14.6667L 25.3333,14.6667L 25.3333,16L 26.6667,16L 26.6667,17.3333L 29.3333,17.3333L 29.3333,16L 28,16L 28,12L 26.6667,12L 26.6667,10.6667 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconGray}" Geometry="F1 M 22.6667,16L 21.3333,16L 21.3333,17.3333L 24,17.3333L 24,14.6667L 22.6667,14.6667L 22.6667,16 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconGray}" Geometry="F1 M 28,9.33333L 28,12L 29.3333,12L 29.3333,10.6667L 30.6667,10.6667L 30.6667,9.33333L 28,9.33333 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconOrange}" Geometry="F1 M 30.6667,8L 22.6667,8L 22.6667,6.66667L 30.6667,6.66667L 30.6667,8 Z "/>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>


    <DrawingBrush x:Key="UANodeCountValueBrush">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="Transparent" Geometry="F1 M 38.6667,24L 0,24L 0,0L 38.6667,0L 38.6667,24 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconBlue}" Geometry="F1 M 30.6667,16L 30.6667,8L 29.3333,8L 29.3333,6.66667L 26.6667,6.66667L 26.6667,8L 28,8L 28,17.3333L 32,17.3333L 32,16L 30.6667,16 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconBlue}" Geometry="F1 M 25.3333,6.66667L 21.3333,6.66667L 21.3333,8L 22.6667,8L 22.6667,16L 21.3333,16L 21.3333,17.3333L 26.6667,17.3333L 26.6667,16L 25.3333,16L 25.3333,9.33333L 26.6667,9.33333L 26.6667,8L 25.3333,8L 25.3333,6.66667 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconGreen}" Geometry="F1 M 18.6667,9.33333L 18.6667,8L 16,8L 16,6.66667L 14.6667,6.66667L 14.6667,4L 13.3333,4L 13.3333,6.66667L 12,6.66667L 12,8L 10.6667,8L 10.6667,9.33333L 12,9.33333L 12,12L 9.33333,12L 9.33333,13.3333L 10.6667,13.3333L 10.6667,17.3333L 12,17.3333L 12,14.6667L 13.3333,14.6667L 13.3333,17.3333L 14.6667,17.3333L 14.6667,13.3333L 17.3333,13.3333L 17.3333,12L 16,12L 16,9.33333L 18.6667,9.33333 Z M 14.6667,12L 13.3333,12L 13.3333,9.33333L 14.6667,9.33333L 14.6667,12 Z "/>
                    <GeometryDrawing Brush="{StaticResource IconGreen}" Geometry="F1 M 17.3333,4L 16,4L 16,6.66667L 17.3333,6.66667L 17.3333,4 Z "/>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <!--EndUANodeBrush -->


    <Style x:Key="UANodeButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="{StaticResource BaseLightBlue}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid VerticalAlignment="Top" Background="{x:Null}"  HorizontalAlignment="Left" x:Name="grid" SnapsToDevicePixels="True">
                        <Border x:Name="border" Background="{StaticResource BaseLightGray}"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" >
                        </Border>
                        <Rectangle Fill="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" Margin="0" VerticalAlignment="Top" HorizontalAlignment="Left" Stroke="{x:Null}"  Width="29" Height="18"  SnapsToDevicePixels="True"/>
                        </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource BaseDarkGray}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="IsDefaulted" Value="true"/>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BaseDarkBlue}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="UANodeLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="BorderBrush" Value="{StaticResource BaseLightBlue}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Grid VerticalAlignment="Top" Background="{x:Null}"  HorizontalAlignment="Left" x:Name="grid" SnapsToDevicePixels="True">
                        <Border x:Name="border" Background="{StaticResource BaseLightGray}"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" >
                        </Border>
                        <Rectangle Fill="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" Margin="0" VerticalAlignment="Top" HorizontalAlignment="Left" Stroke="{x:Null}"  Width="29" Height="18"  SnapsToDevicePixels="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource BaseDarkGray}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>














    <!-- Кнопки на раскрытия узлов используется в TreeView, Expander, Grid -->

    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF3C6488"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF3C6488"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF7396B2"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FF7396B2"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF0D3559"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF0D3559"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF3C6488"/>



    <Style x:Key="SimpleTreeViewItemToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource BaseDarkBlue}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="15"/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid x:Name="ExpansionIndicator" Background="Transparent" Grid.ColumnSpan="2" Grid.RowSpan="2">
                            <Path x:Name="ExpansionIndicatorGlyph" Width="5" Height="9"  Stretch="Fill" StrokeThickness="1" Fill="{TemplateBinding Background}"  StrokeMiterLimit="2.75" RenderTransformOrigin="0.5,0.5"  Stroke="{TemplateBinding BorderBrush}" Data="F1 M 10.2622,0.708332L 16.2622,6.04167L 10.2622,11.375L 10.2622,0.708332 Z " VerticalAlignment="Stretch" Margin="1,0,0,0">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>

                        </Grid>
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="2" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="RenderTransform" TargetName="ExpansionIndicatorGlyph">
                                <Setter.Value>
                                    <RotateTransform Angle="45" CenterY="0" CenterX="0"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="ExpansionIndicatorGlyph" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}"/>
                            <Setter Property="Stroke" TargetName="ExpansionIndicatorGlyph" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="ExpansionIndicatorGlyph" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}"/>
                            <Setter Property="Fill" TargetName="ExpansionIndicatorGlyph" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke" TargetName="ExpansionIndicatorGlyph" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}"/>
                            <Setter Property="Fill" TargetName="ExpansionIndicatorGlyph" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpansionIndicatorStyle" TargetType="{x:Type igPrim:ExpansionIndicator}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource BaseDarkBlue}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igPrim:ExpansionIndicator}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="15"/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid x:Name="ExpansionIndicator" Background="Transparent" Grid.ColumnSpan="2" Grid.RowSpan="2">
                            <Path x:Name="ExpansionIndicatorGlyph" Width="5" Height="9"  Stretch="Fill" StrokeThickness="1" Fill="{TemplateBinding Background}"  StrokeMiterLimit="2.75" RenderTransformOrigin="0.5,0.5"  Stroke="{TemplateBinding BorderBrush}" Data="F1 M 10.2622,0.708332L 16.2622,6.04167L 10.2622,11.375L 10.2622,0.708332 Z " VerticalAlignment="Stretch" Margin="1,0,0,0">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>

                        </Grid>
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="2" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter Property="RenderTransform" TargetName="ExpansionIndicatorGlyph">
                                <Setter.Value>
                                    <RotateTransform Angle="45" CenterY="0" CenterX="0"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="ExpansionIndicatorGlyph" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}"/>
                            <Setter Property="Stroke" TargetName="ExpansionIndicatorGlyph" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="ExpansionIndicatorGlyph" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}"/>
                            <Setter Property="Fill" TargetName="ExpansionIndicatorGlyph" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsExpanded" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke" TargetName="ExpansionIndicatorGlyph" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}"/>
                            <Setter Property="Fill" TargetName="ExpansionIndicatorGlyph" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style x:Key="ExpanderToggleButton" BasedOn="{StaticResource SimpleTreeViewItemToggleButton}" TargetType="{x:Type ToggleButton}"/>



    <!-- Прозрачная -->
    <Style x:Key="TransparentButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter  RecognizesAccessKey="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="ExportToButton" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid VerticalAlignment="Stretch" Background="{x:Null}"  HorizontalAlignment="Stretch" x:Name="grid" SnapsToDevicePixels="True">
                        <Border x:Name="border" Background="{DynamicResource BaseLightGray}"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" >
                        </Border>
                        <Rectangle Fill="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"  Stroke="{x:Null}"  Width="19" Height="19"  SnapsToDevicePixels="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource BaseDarkGray}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="IsDefaulted" Value="true"/>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BaseDarkBlue}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="SelectDirectory" TargetType="{x:Type Button}">
        <Style.Resources>
            <DrawingBrush x:Key="SelectDirectoryBrush">
                <DrawingBrush.Drawing>
                    <DrawingGroup>
                        <DrawingGroup.Children>
                            <GeometryDrawing Brush="{StaticResource IconBlue}" Geometry="F1 M 0,0L 0,26.6667L 26.6667,26.6667L 26.6667,0L 0,0 Z M 24,24L 2.66667,24L 2.66667,2.66667L 24,2.66667L 24,24 Z "/>
                            <GeometryDrawing Brush="{StaticResource IconGray}" Geometry="F1 M 8,9.33333L 9.33333,9.33333L 9.33333,12L 8,12L 8,14.6667L 9.33333,14.6667L 9.33333,17.3333L 8,17.3333L 8,16L 6.66667,16L 6.66667,14.6667L 5.33333,14.6667L 5.33333,12L 6.66667,12L 6.66667,10.6667L 8,10.6667L 8,9.33333 Z "/>
                            <GeometryDrawing Brush="{StaticResource IconGray}" Geometry="F1 M 13.3333,10.6667L 12,10.6667L 12,14.6667L 10.6667,14.6667L 10.6667,18.6667L 12,18.6667L 12,16L 13.3333,16L 13.3333,12L 14.6667,12L 14.6667,8L 13.3333,8L 13.3333,10.6667 Z "/>
                            <GeometryDrawing Brush="{StaticResource IconGray}" Geometry="F1 M 9.33333,20L 10.6667,20L 10.6667,18.6667L 9.33333,18.6667L 9.33333,20 Z "/>
                            <GeometryDrawing Brush="{StaticResource IconGray}" Geometry="F1 M 14.6667,6.66666L 14.6667,8L 16,8L 16,6.66666L 14.6667,6.66666 Z "/>
                            <GeometryDrawing Brush="{StaticResource IconBlue}" Geometry="F1 M 17.3333,17.3333L 14.6667,17.3333L 14.6667,14.6667L 17.3333,14.6667L 17.3333,17.3333 Z M 21.3333,14.6667L 18.6667,14.6667L 18.6667,17.3333L 21.3333,17.3333L 21.3333,14.6667 Z "/>
                        </DrawingGroup.Children>
                    </DrawingGroup>
                </DrawingBrush.Drawing>
            </DrawingBrush>
        </Style.Resources>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{x:Null}" Width="20" Height="20" x:Name="grid" SnapsToDevicePixels="True">
                        <Border x:Name="border" Background="{StaticResource BaseLightGray}"  BorderBrush="{TemplateBinding BorderBrush}">
                        </Border>
                        <Rectangle Fill="{StaticResource SelectDirectoryBrush}"  Stroke="{x:Null}" Width="20" Height="20"   SnapsToDevicePixels="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource BaseDarkGray}"/>
                        </Trigger>
                    
                        <Trigger Property="IsPressed" Value="true">
                      
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style x:Key="BackButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid" Height="18" Width="18" SnapsToDevicePixels="True">
                        <Rectangle x:Name="rectangle"  HorizontalAlignment="Center" Height="16"  Margin="0" StrokeStartLineCap="Triangle" StrokeEndLineCap="Triangle" StrokeLineJoin="Bevel" VerticalAlignment="Center" Width="16" Fill="#FF416A90" RadiusX="1" RadiusY="1" Stroke="#33FFFFFF" StrokeThickness="0.5"/>
                        <Path x:Name="path1" Data="M8.3297938,0 C8.3884496,0 8.4359998,0.047552608 8.4359998,0.10621173 L8.4359998,4.1775012 C8.4359998,4.1775012 3.9231855,8.4368534 3.9231855,8.4368534 3.9231855,8.4368534 8.4359998,12.748267 8.4359998,12.748267 L8.4359998,16.889788 C8.4359998,16.948448 8.3884496,16.996 8.3297938,16.996 8.3297938,16.996 -0.93485131,8.4368534 -0.9348512,8.4368534 z" Stretch="Fill"  Height="11" Width="Auto" StrokeThickness="0.4" Fill="#ffffffff" Margin="5.971,0,6.475,0" VerticalAlignment="Center" HorizontalAlignment="Stretch" Stroke="#43FFFFFF"/>
                        <!--<Path x:Name="path" Data="M520.57491,334.08007 L514,326.66701 520.82275,318.72257" HorizontalAlignment="Center" Height="10"  Stretch="Fill" Width="6" OpacityMask="Black" Stroke="White" StrokeLineJoin="Bevel" StrokeStartLineCap="Triangle" StrokeEndLineCap="Triangle" VerticalAlignment="Center" Margin="0" Visibility="Collapsed"/>-->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                        	<Setter Property="Fill" TargetName="rectangle" Value="#FF9FB8D0"/>      	
                        	<Setter Property="Fill" TargetName="path1" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                        	<Setter Property="Fill" TargetName="rectangle" Value="#FF416A90"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                        	<Setter Property="Opacity" TargetName="grid" Value="0.495"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BaseLinkButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter TextBlock.FontSize="{TemplateBinding FontSize}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





    <!-- Используется только в глобальном фильтре -->
    <Style x:Key="OperationButtonStyle" BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#FF28568c"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid"  Opacity="1" SnapsToDevicePixels="True" Width="75" Height="75">
                        <Border x:Name="border" Background="{StaticResource BaseLightGray}" HorizontalAlignment="Stretch" BorderThickness="1" BorderBrush="{StaticResource BaseDarkGray}" Margin="0" />
                        <ContentPresenter    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Margin="5,0,5,2" VerticalAlignment="Bottom" Visibility="Collapsed"/>
                        <TextBlock TextWrapping="Wrap" Margin="2,0,2,3" FontSize="10px" Height="28px"  Text="{TemplateBinding Content}" TextAlignment="Center" VerticalAlignment="Bottom" />
                        <Rectangle Fill="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" Margin="0.5,8.5,0,0" Stroke="{x:Null}" Width="32" Height="32" SnapsToDevicePixels="True"  VerticalAlignment="Top"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource BaseDarkGray}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="IsDefaulted" Value="true"/>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BaseDarkBlue}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.40"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Переключатель Switch -->
    <Style x:Key="AnimatedActiveStateToggleSwitch" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="#a6a9af" />
        <Setter Property="BorderBrush" Value="#a6a9af" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Viewbox Stretch="Uniform">
                        <Canvas x:Name="Layer_1" Width="20" Height="16" Canvas.Left="10" Canvas.Top="0">
                            <Rectangle  Canvas.Left="0" Width="20" Height="16" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" RadiusX="0" RadiusY="0"/>
                            <Rectangle  Canvas.Left="15" Width="20" Height="16" Fill="#a6a9af" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" RadiusX="0" RadiusY="0"/>
                            <Border Canvas.Left="10" Width="15" Height="16" x:Name="rect416927" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,0,1"/>
                            <Border x:Name="ellipse"  Canvas.Left="1" Width="19" Height="14" Background="White" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"  Canvas.Top="1" CornerRadius="0">
                                <Border.RenderTransform>
                                    <TranslateTransform X="0" Y="0" />
                                </Border.RenderTransform>

                                <!--<Border.BitmapEffect>
                                    <DropShadowBitmapEffect Softness="0.1" ShadowDepth="0.7" Direction="0" Color="#BBBBBB"/>
                                </Border.BitmapEffect>-->
                            </Border>
                        </Canvas>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" >
                            <Setter Property="Background" TargetName="ellipse" Value="{StaticResource BaseDarkGray}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False" >
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#FF00A77B" Duration="0:0:0.2" />
                                        <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="#FF00A77B" Duration="0:0:0.2" />
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ellipse">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="14" KeySpline="0, 1, 0.6, 1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#a6a9af" Duration="0:0:0.2" />
                                        <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="#a6a9af" Duration="0:0:0.2" />
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ellipse">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="14"/>
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0" KeySpline="0, 0.5, 0.5, 1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    

   


</ResourceDictionary>