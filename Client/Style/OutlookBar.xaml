<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Proryv.AskueARM2.Client.Styles.Style"
	xmlns:igwindows="http://infragistics.com/Windows"
	xmlns:PresentationOptions="http://schemas.microsoft.com
                    /winfx/2006/xaml/presentation/options"
	xmlns:outlookBar="http://infragistics.com/OutlookBar"
           xmlns:Custom="http://infragistics.com/Windows"
           xmlns:converters1="clr-namespace:Proryv.AskueARM2.Client.Styles.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/ElectroARM_Styles;Component/Style/BrushResource.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <converters1:DoubleMathConvertor x:Key="DoubleMathConvertorMinus" MathOperation="Minus"></converters1:DoubleMathConvertor>


    <Style x:Key="PingButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="ToolTip"	Value="Закрепить"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid HorizontalAlignment="Center" x:Name="Pinicon" Margin="0" RenderTransformOrigin="0.5,0.5" Width="11" Height="7" VerticalAlignment="Center">
                        <Path Data="M5,2 L5,4 10,4 10,2 z M4,0 L5,0 5,1 10,1 11,1 11,2 11,4 11,6 10,6 5,6 5,7 4,7 4,4 0,4 0,3 4,3 z" Fill="{StaticResource BaseDarkBlue}" Height="7" Margin="0" Stretch="Fill" Stroke="{x:Null}" StrokeThickness="0" VerticalAlignment="Center" />
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <RotateTransform Angle="0"/>
                            </TransformGroup>
                        </Grid.RenderTransform>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="True">
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="RenderTransform" TargetName="Pinicon">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="-90"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style TargetType="{x:Type outlookBar:XamOutlookBar}">
        <Style.Resources>
            <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"/>
        </Style.Resources>
        <Setter Property="BorderBrush" Value="{StaticResource BaseLightBlue}"/>
        <Setter Property="Background" Value="{StaticResource BaseLightBlue}"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type outlookBar:XamOutlookBar}">
                    <!-- JM 02-09-09 TFS12731 - Add an AdornerDecorator to force the AdornerLayer for the Splitter Preview to be created here -->
                    <AdornerDecorator>
                        <Border VerticalAlignment="Stretch">
                            <Grid VerticalAlignment="Stretch">

                                <Grid.ColumnDefinitions>
                                    <!-- JM 04-27-11 TFS73968 Revert back to original layout and rely on changes made in code behind to address TFS73871 & TFS22746 -->
                                    <!-- JM 04-27-11 TFS73871 First column should be '*' column -->
                                    <!-- JM 04-25-11 TFS22746 Remove errant 3rd ColumnDefinition -->
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <!-- JM 04-27-11 TFS73968 Revert back to original layout and rely on changes made in code behind to address TFS73871 & TFS22746 -->
                                <!-- JM 04-25-11 TFS22746 Change Grid.Column from 2 to 1 -->
                                <Thumb
										x:Name="PART_VerticalSplitter"
										Grid.Column="2"
										Style="{DynamicResource {x:Static outlookBar:XamOutlookBar.VerticalSplitterStyleKey}}"
										Visibility="{Binding Path=IsVerticalSplitterVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource booleanToVisibilityConverter}}"/>

                                <!-- JM 04-27-11 TFS73968 Revert back to original layout and rely on changes made in code behind to address TFS73871 & TFS22746 -->
                                <!-- JM 04-25-11 TFS22746 Change Grid.Column from 1 to 0 -->
                                <Border
										Background="{TemplateBinding Background}"
										Grid.Column="1"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}"
										Padding="{TemplateBinding Padding}"
										VerticalAlignment="Stretch"
										SnapsToDevicePixels="True">

                                    <Grid x:Name="PART_Grid">

                                        <Grid.RowDefinitions>
                                            <!-- Header Row -->
                                            <RowDefinition Height="Auto"/>
                                            <!-- Selected Group Content Row -->
                                            <RowDefinition Height="*" MinHeight="{TemplateBinding SelectedAreaMinHeight}"/>
                                            <!-- Splitter Row -->
                                            <RowDefinition Height="Auto"/>
                                            <!-- Groups Row -->
                                            <RowDefinition Height="0" MaxHeight="{Binding ElementName=PART_NavigationArea, Path=Height}"/>
                                            <!-- Toolbar Row -->
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <!-- Header ================================================ -->
                                        <outlookBar:SelectedGroupHeader
												x:Name="PART_SelectedGroupHeader"
												Grid.Row="0"
												Grid.Column="1"
												/>

                                        <!-- Selected Group Content ================================ -->
                                        <outlookBar:SelectedGroupContent
												x:Name="PART_SelectedGroupContent"
												Grid.Row="1"
												Grid.Column="1"
												MinHeight="{TemplateBinding SelectedAreaMinHeight}"/>
                                        <!-- Splitter ============================================== -->
                                        <outlookBar:GroupAreaSplitter x:Name="PART_Splitter" Grid.Row="2" Grid.Column="1"/>

                                        <!-- Groups   ============================================== -->
                                        <outlookBar:GroupsPresenter
												x:Name="PART_NavigationArea"
												Grid.Row="3"
												Grid.Column="1"
												ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NavigationAreaGroups}"/>

                                        <!-- Toolbar =============================================== -->
                                        <!--
												GGroups="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=OverflowAreaGroups}"
											-->
                                        <outlookBar:GroupOverflowArea 
												x:Name="PART_OverflowArea" Grid.Row="4" Grid.Column="1"
		                                        
												/>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Splitter" Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="SizeNS">
                            </Setter>
                        </Trigger>
                        <Trigger SourceName="PART_VerticalSplitter" Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="SizeWE">
                            </Setter>
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=VerticalSplitterLocation}" Value="Left">
                            <Setter TargetName="PART_VerticalSplitter" Property="Grid.Column" Value="0"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style TargetType="{x:Type outlookBar:SelectedGroupHeader}">
        <Style.Resources>
            <RotateTransform x:Key="MinimizeOnRightTransform" Angle="180"/>
        </Style.Resources>
        <Setter Property="Background" Value="{StaticResource BaseDarkGray}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource BaseDarkFontColor}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type outlookBar:SelectedGroupHeader}">
                    <Grid Margin="0,0,0,1">
                        <Border
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter
									x:Name="ContentPresenterHeader"
									Grid.Column="0"
									Content="{Binding (outlookBar:XamOutlookBar.OutlookBar).SelectedGroup.Header, RelativeSource={RelativeSource Self}}"
									Margin="7,7,8,3"/>
                                <!-- JM 03-25-10 TFS30068 Collapse the MinimizeButton when AllowMinimized is false in a trigger below instead of binding the enabled property here-->
                                <!--<ToggleButton
									x:Name="MinimizeButton"
									Grid.Column="1"
									IsChecked="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).IsMinimized, RelativeSource={RelativeSource Self}}"
									IsEnabled="{Binding Path=(igOutlookBar:XamOutlookBar.OutlookBar).AllowMinimized, RelativeSource={RelativeSource Self}}"
									Style="{DynamicResource {x:Static igOutlookBar:XamOutlookBar.MinimizeToggleButtonStyleKey}}"
									Margin="0,4,0,3"/>-->

                                <ToggleButton
									x:Name="PingButton"
									Grid.Column="1"
									Margin="0,4,30,3"
                                    Style="{StaticResource PingButtonStyle}"/>
                                <ToggleButton
									x:Name="MinimizeButton"
									Grid.Column="1"
									IsChecked="{Binding (outlookBar:XamOutlookBar.OutlookBar).IsMinimized, RelativeSource={RelativeSource Self}}"
									Style="{DynamicResource {x:Static outlookBar:XamOutlookBar.MinimizeToggleButtonStyleKey}}"
									Margin="0,4,0,3" HorizontalAlignment="Right"/>
                            </Grid>
                        </Border>
                        <Border x:Name="innerBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,0,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- JM 03-25-10 TFS30068 Collapse the MinimizeButton when AllowMinimized is false instead of binding the enabled property of the minimized button above.-->
                        <DataTrigger Binding="{Binding OutlookBar.AllowMinimized, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                            <Setter TargetName="MinimizeButton" Property="Visibility" Value="Hidden"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding OutlookBar.IsMinimized, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                            <Setter TargetName="ContentPresenterHeader" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PingButton" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding OutlookBar.VerticalSplitterLocation, RelativeSource={RelativeSource TemplatedParent}}" Value="Left">
                            <Setter TargetName="MinimizeButton" Property="LayoutTransform" Value="{StaticResource MinimizeOnRightTransform}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



































    <Style  TargetType="{x:Type outlookBar:GroupOverflowArea}">
        <Setter Property="Background" Value="{StaticResource BaseLightGray}"/>
    </Style>




    <Style  TargetType="{x:Type outlookBar:OutlookBarGroup}">
        <Setter Property="Background" Value="{StaticResource BaseLightGray}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BaseLightBlue}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ToolTipService.IsEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type outlookBar:OutlookBarGroup}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="0,0,0,1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ImageColumn" Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Image x:Name="PART_Image" Grid.Column="0" MaxWidth="16" MaxHeight="16" Margin="2,2,0,1" MinWidth="16" MinHeight="16" Source="{TemplateBinding SmallImage}" Stretch="Uniform"/>
                            <ContentPresenter x:Name="PART_Header" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1"  Margin="10,0,0,1" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding LargeImage, RelativeSource={RelativeSource Self}}" Value="{x:Null}"/>
                                <Condition Binding="{Binding Location, RelativeSource={RelativeSource Self}}" Value="NavigationGroupArea"/>
                                <Condition Binding="{Binding OutlookBar.ReserveSpaceForLargeImage, RelativeSource={RelativeSource Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Margin" TargetName="PART_Header" Value="12,0,0,1"/>
                            <Setter Property="Width" TargetName="ImageColumn" Value="Auto"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding LargeImage, RelativeSource={RelativeSource Self}}" Value="{x:Null}"/>
                                <Condition Binding="{Binding Location, RelativeSource={RelativeSource Self}}" Value="NavigationGroupArea"/>
                                <Condition Binding="{Binding OutlookBar.ReserveSpaceForLargeImage, RelativeSource={RelativeSource Self}}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Width" TargetName="ImageColumn" Value="0"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="PART_Header" Value="{StaticResource SelectionFontColor}"/>
                        </Trigger>
                        <Trigger Property="Location" Value="NavigationGroupArea">
                            <Setter Property="Visibility" TargetName="PART_Header" Value="Visible"/>
                            <Setter Property="Source" TargetName="PART_Image" Value="{Binding LargeImage, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding OutlookBar.ShowGroupHeaderAsToolTip, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="ToolTip" Value="{Binding Header, RelativeSource={RelativeSource Self}}"/>
                        </DataTrigger>
                        <Trigger Property="Location" Value="OverflowContextMenu">
                            <Setter Property="Source" TargetName="PART_Image" Value="{Binding SmallImageResolved, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="Visibility" TargetName="PART_Image" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource BaseDarkGray}"/>
                            <Setter Property="TextElement.Foreground" TargetName="PART_Header" Value="{StaticResource SelectionFontColor}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding OutlookBar.IsMinimized, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="Visibility" TargetName="PART_Header" Value="Collapsed"/>
                            <Setter Property="Source" TargetName="PART_Image" Value="{Binding LargeImage, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="ToolTipService.IsEnabled" Value="{Binding OutlookBar.ShowToolTips, RelativeSource={RelativeSource Self}}"/>
                        </DataTrigger>
                        <Trigger Property="Location" Value="OverflowArea">
                            <Setter Property="Source" TargetName="PART_Image" Value="{Binding SmallImageResolved, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="Visibility" TargetName="PART_Header" Value="Collapsed"/>
                            <Setter Property="Margin" TargetName="PART_Image" Value="2,6,2,3"/>
                            <Setter Property="MaxHeight" TargetName="PART_Image" Value="16"/>
                            <Setter Property="MaxWidth" TargetName="PART_Image" Value="16"/>
                            <Setter Property="ToolTipService.IsEnabled" Value="{Binding OutlookBar.ShowToolTips, RelativeSource={RelativeSource Self}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="False">
                <Setter Property="Background" Value="{StaticResource BaseLightGray}"/>
                <Setter Property="Foreground" Value="{StaticResource SelectionFontColor}"/>
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOverGroup, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource BaseDarkGray}"/>
                <Setter Property="Foreground" Value="{StaticResource BaseDarkFontColor}"/>
                <Setter Property="Tag" Value="{StaticResource BaseDarkFontColor}"/>
                <Setter Property="Cursor" Value="Hand"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOverGroup, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource BaseDarkGray}"/>
                <Setter Property="Cursor" Value="Hand"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOverGroup, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding IsMouseLeftButtonPressed, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource BaseDarkGray}"/>
                <Setter Property="Cursor" Value="Hand"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>




    <Style TargetType="{x:Type outlookBar:SelectedGroupContent}">
        <Setter Property="Background" Value="{StaticResource BaseLightBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource BaseDarkFontColor}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type outlookBar:SelectedGroupContent}">
                    <Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid>
                            <!-- JM 03-10-09 TFS11436 - Change name to use the 'PART_' naming convention -->
                            <ContentPresenter x:Name="PART_SelectedGroupContentPresenter"
                                              Content="{Binding Path=(outlookBar:XamOutlookBar.OutlookBar).SelectedGroupContent, RelativeSource={RelativeSource Self}}"
                                              ContentTemplate="{Binding Path=(outlookBar:XamOutlookBar.OutlookBar).SelectedGroupContentTemplate, RelativeSource={RelativeSource Self}}"
                                              ContentTemplateSelector="{Binding Path=(outlookBar:XamOutlookBar.OutlookBar).SelectedGroupContentTemplateSelector, RelativeSource={RelativeSource Self}}"
                                              />

                         

                            <!-- Popup ================================================= -->
                            <!-- JM 03-10-09 TFS11436 - Changed the PlacementTarget ElementName binding name to use the new name for the SelectedGroupContentPresenter (see above) -->
                            <Popup
							x:Name="PART_Popup"
							Grid.Row="1"
							StaysOpen="False"
							Placement="Right" VerticalAlignment="Stretch" Margin="0"   Height="{Binding Converter={StaticResource DoubleMathConvertorMinus},ConverterParameter=56, Path=(outlookBar:XamOutlookBar.OutlookBar).ActualHeight,RelativeSource={RelativeSource Self}}"
							PlacementTarget="{Binding ElementName=PART_SelectedGroupContentPresenter}">
                                <Border  VerticalAlignment="Stretch"  BorderThickness="2" Background="{StaticResource BaseLightBackground}" BorderBrush="{StaticResource BaseLightBlue}">
                                    <Border  VerticalAlignment="Stretch"  BorderBrush="Transparent" BorderThickness="0" Margin="4">
                                        <!-- JM 03-10-09 TFS11436 - Change name to use the 'PART_' naming convention -->
                                        <Custom:PopupResizerDecorator x:Name="PART_PopupResizerDecorator" ResizeMode="Both"  Height="{Binding Converter={StaticResource DoubleMathConvertorMinus},ConverterParameter=56, Path=(outlookBar:XamOutlookBar.OutlookBar).ActualHeight,RelativeSource={RelativeSource Self}}"  >
                                            <ContentPresenter x:Name="SelectedContent" 
                                         Content="{Binding Path=(outlookBar:XamOutlookBar.OutlookBar).SelectedGroupContent, RelativeSource={RelativeSource Self}}"
                                         ContentTemplate="{Binding Path=(outlookBar:XamOutlookBar.OutlookBar).SelectedGroupContentTemplate, RelativeSource={RelativeSource Self}}"
                                         ContentTemplateSelector="{Binding Path=(outlookBar:XamOutlookBar.OutlookBar).SelectedGroupContentTemplateSelector, RelativeSource={RelativeSource Self}}"/>
                                        </Custom:PopupResizerDecorator>
                                    </Border>
                                </Border>
                            </Popup>
                            <ToggleButton
								x:Name="PART_ButtonShowPopup"
    							Visibility="Collapsed"
								Command="{x:Static outlookBar:OutlookBarCommands.ShowPopupCommand}"
								Style="{DynamicResource {x:Static outlookBar:XamOutlookBar.NavigationPaneToggleButtonStyleKey}}"
                                IsChecked="{Binding ElementName=PART_Popup, Path=IsOpen, UpdateSourceTrigger=Explicit}"
                                >
                                <ToggleButton.LayoutTransform>
                                    <RotateTransform Angle="-90"/>
                                </ToggleButton.LayoutTransform>
                            </ToggleButton>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=OutlookBar.IsMinimized, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                            <Setter TargetName="PART_ButtonShowPopup" Property="Visibility" Value="Visible"/>
                            <!-- JM 03-10-09 TFS11436 - Changed the TargetName to use the new name for the SelectedGroupContentPresenter with the 'PART_' prefix -->
                            <Setter TargetName="PART_SelectedGroupContentPresenter" Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=OutlookBar.IsMinimized, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                            <!-- JM 03-10-09 TFS11436 - Changed the TargetName to use the new name for the SelectedGroupContentPresenter with the 'PART_' prefix -->
                            <Setter TargetName="PART_SelectedGroupContentPresenter" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_SelectedGroupContentPresenter" Property="Content" Value="{Binding Path=(outlookBar:XamOutlookBar.OutlookBar).SelectedGroupContent, RelativeSource={RelativeSource Self}}"/>
                            <Setter TargetName="PART_SelectedGroupContentPresenter" Property="ContentTemplate" Value="{Binding Path=(outlookBar:XamOutlookBar.OutlookBar).SelectedGroupContentTemplate, RelativeSource={RelativeSource Self}}"/>
                            <Setter TargetName="PART_SelectedGroupContentPresenter" Property="ContentTemplateSelector" Value="{Binding Path=(outlookBar:XamOutlookBar.OutlookBar).SelectedGroupContentTemplateSelector, RelativeSource={RelativeSource Self}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=OutlookBar.VerticalSplitterLocation, RelativeSource={RelativeSource TemplatedParent}}" Value="Left">
                            <Setter TargetName="PART_Popup" Property="Placement" Value="Left"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="{x:Static outlookBar:XamOutlookBar.NavigationPaneToggleButtonStyleKey}" TargetType="{x:Type ToggleButton}" BasedOn="{x:Null}">
        <Setter Property="Content" Value="{Binding ElementName=XamOutlookBar,Path=SelectedGroup.Header}" />
        <Setter Property="Background" Value="{StaticResource BaseLightBackground}"/>
        <!-- JM 01-13-12 TFS99281 - Add Setter for HorizontalContentAlignment-->
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="ToolTip"	Value="{x:Static outlookBar:ResourcesOutlookBar.NavigationPaneMinimizedTooltip}"/>
        <!--<Setter Property="Content"	Value="{x:Static outlookBar:ResourcesOutlookBar.NavigationPaneMinimizedText}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="Border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                        <!-- JM 01-13-12 TFS99281 - Add TextBlock.TextAlignment="Center" -->
                        <ContentPresenter x:Name="header" TextElement.Foreground="{StaticResource IconBlue}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" TextBlock.TextAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource BaseDarkGray}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(outlookBar:XamOutlookBar.OutlookBar).IsMinimized, RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={x:Static RelativeSource.Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource BaseDarkGray}"/>
                            <Setter TargetName="header" Property="TextElement.Foreground" Value="{DynamicResource {x:Static outlookBar:OutlookBarBrushKeys.MinimizedNavigationPaneHottrackTextFillKey}}"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(outlookBar:XamOutlookBar.OutlookBar).IsMinimized, RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={x:Static RelativeSource.Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource BaseDarkGray}"/>
                            <Setter TargetName="header" Property="TextElement.Foreground" Value="{DynamicResource {x:Static outlookBar:OutlookBarBrushKeys.MinimizedNavigationPaneHottrackTextFillKey}}"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(outlookBar:XamOutlookBar.OutlookBar).IsMinimized, RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding Path=IsChecked, RelativeSource={x:Static RelativeSource.Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource BaseDarkGray}"/>
                            <Setter TargetName="header" Property="TextElement.Foreground" Value="{DynamicResource {x:Static outlookBar:OutlookBarBrushKeys.MinimizedNavigationPaneHottrackTextFillKey}}"/>
                        </MultiDataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>







    <Style x:Key= "{x:Static outlookBar:XamOutlookBar.MinimizeToggleButtonStyleKey}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="ToolTip"	Value="{x:Static outlookBar:ResourcesOutlookBar.MinimizeButtonMinimizeTooltip}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="glyphArea"
		                Width="18"
		                Height="18"
                          Margin="0,0,3,0"
                          Background="Transparent">
                        <Grid x:Name="glyph">
                            <Path x:Name="glyph1bg"
			                Margin="4,0,0,0"
			                HorizontalAlignment="Center"
			                VerticalAlignment="Center"
			                Height="9"
			                Width="6.5"
			                Stretch="Fill"
			                Opacity="1"
			                Data="M 8.5,7 C8.5,7 4,3.5 4,3.5 4,3.5 8.5,0 8.5,0 8.5,0 8.5,2 8.5,2 8.5,2 6.5,3 6.5,3 6.5,3 6.5,4 6.5,4 6.5,4 8.5,5 8.5,5 8.5,5 8.5,7 8.5,7 z"
			                Fill="{DynamicResource {x:Static outlookBar:OutlookBarBrushKeys.GlyphThemeBackgroundFillKey}}"  Visibility="Collapsed" />
                            <Path x:Name="glyph2bg"
			                Margin="0,0,5,0"
			                HorizontalAlignment="Center"
			                VerticalAlignment="Center"
			                Height="9"
			                Width="6.5"
			                Stretch="Fill"
			                Opacity="1"
			                Data="M 4.5,7 C4.5,7 0,3.5 0,3.5 0,3.5 4.5,0 4.5,0 4.5,0 4.5,2 4.5,2 4.5,2 2.5,3 2.5,3 2.5,3 2.5,4 2.5,4 2.5,4 4.5,5 4.5,5 4.5,5 4.5,7 4.5,7 z"
			                Fill="{DynamicResource {x:Static outlookBar:OutlookBarBrushKeys.GlyphThemeBackgroundFillKey}}"  Visibility="Collapsed" />
                            <Path x:Name="glyph1"
			                Margin="4,0,0,0"
			                HorizontalAlignment="Center"
			                VerticalAlignment="Center"
			                Height="7"
			                Width="4.5"
			                Stretch="Fill"
			                Opacity="1"
			                Data="M 8.5,7 C8.5,7 4,3.5 4,3.5 4,3.5 8.5,0 8.5,0 8.5,0 8.5,2 8.5,2 8.5,2 6.5,3 6.5,3 6.5,3 6.5,4 6.5,4 6.5,4 8.5,5 8.5,5 8.5,5 8.5,7 8.5,7 z" Fill="{StaticResource BaseDarkBlue}"/>
                            <Path x:Name="glyph2"
			                Margin="0,0,4,0"
			                HorizontalAlignment="Center"
			                VerticalAlignment="Center"
			                Height="7"
			                Width="4.5"
			                Stretch="Fill"
			                Opacity="1"
			                Data="M 4.5,7 C4.5,7 0,3.5 0,3.5 0,3.5 4.5,0 4.5,0 4.5,0 4.5,2 4.5,2 4.5,2 2.5,3 2.5,3 2.5,3 2.5,4 2.5,4 2.5,4 4.5,5 4.5,5 4.5,5 4.5,7 4.5,7 z" Fill="{StaticResource BaseDarkBlue}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="LayoutTransform" TargetName="glyph1">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="glyph2">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="glyph1bg">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="glyph2bg">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ToolTip"	Value="{x:Static outlookBar:ResourcesOutlookBar.MinimizeButtonExpandTooltip}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter TargetName="glyphArea" Property="Background" Value="{DynamicResource {x:Static outlookBar:OutlookBarBrushKeys.ContentAreaDropdownHottrackCenterFillKey}}"/>-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <!--<Setter TargetName="glyphArea" Property="Background" Value="{DynamicResource {x:Static outlookBar:OutlookBarBrushKeys.ContentAreaDropdownPressedCenterFillKey}}"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>






















</ResourceDictionary>